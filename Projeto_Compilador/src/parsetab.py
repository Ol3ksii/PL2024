
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ASSIGN BEGIN BOOLEANTYPE BREAK CASE CHAR COLON COMMA COMMENT CONST DIV DO DOT DOTDOT DOWNTO ELSE END EQ FALSE FLOAT FLOATTYPE FOR FUNCTION GE GT ID IF INTEGERTYPE LBRACKET LE LENGTHFUNC LPAREN LT MINUS MOD NE NOT NUMBER OF OR ORDFUNC PLUS PREDFUNC PROCEDURE PROGRAM RBRACKET READFUNC READFUNCLN REPEAT RPAREN SEMICOLON STRING STRINGTYPE SUCCFUNC THEN TIMES TO TRUE TYPE UNTIL VAR WHILE WRITEFUNC WRITEFUNCLNinit : PROGRAM program_nameprogram_name : ID SEMICOLON program_bodyprogram_body : const_decls func_decls var_decl begin_progr\n                    | func_decls var_decl begin_progr\n                    | const_decls var_decl begin_progr\n                    | const_decls func_decls begin_progr\n                    | const_decls begin_progr\n                    | func_decls begin_progr\n                    | var_decl begin_progr\n                    | begin_progrconst_decls : CONST const_decl_listconst_decl_list : const_decl \n                       | const_decl_list const_declconst_decl : ID EQ expression SEMICOLONfunc_decls : func_decl \n                  | func_decls func_declfunc_decl : FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_funcbegin_func : var_decl compound_statement SEMICOLON\n                  | compound_statement SEMICOLONvar_decl : VAR var_decl_linesvar_decl_lines : var_decl_line\n                      | var_decl_lines var_decl_linevar_decl_line : id_list COLON type SEMICOLON\n                     | id_list COLON typeid_list : ID\n               | id_list COMMA IDtype : INTEGERTYPE\n            | FLOATTYPE\n            | BOOLEANTYPE\n            | STRINGTYPE\n            | ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF typebegin_progr : compound_statement DOTstatement_list : statement\n                      | statement_list statementstatement : COMMENT\n                 | simple_statement SEMICOLON\n                 | compound_statement SEMICOLON\n                 | selection_statement\n                 | while_statement\n                 | for_statementsimple_statement : ID ASSIGN expression\n                        | WRITEFUNC LPAREN expression_list RPAREN\n                        | WRITEFUNCLN LPAREN expression_list RPAREN\n                        | READFUNC expression\n                        | READFUNCLN expression\n                        | BREAKcompound_statement : BEGIN statement_list ENDselection_statement : IF expression THEN statement\n                           | IF expression THEN inside_statement ELSE statementinside_statement : simple_statement\n                        | compound_statement\n                        | inside_selection_statementinside_selection_statement : IF expression THEN inside_statement\n                                  | IF expression THEN inside_statement ELSE inside_statementfor_statement : FOR ID ASSIGN expression TO expression DO statement\n                     | FOR ID ASSIGN expression DOWNTO expression DO statementwhile_statement : WHILE expression DO statementexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression AND expression\n                  | expression GT expression\n                  | expression LT expression\n                  | expression GE expression\n                  | expression LE expression\n                  | expression EQ expression\n                  | expression NE expression\n                  | expression OR expressionexpression : STRING\n                  | NUMBER\n                  | FLOAT\n                  | FALSE\n                  | TRUE\n                  | CHAR\n                  | ID\n                  | ID LBRACKET expression RBRACKETexpression : ID LPAREN expression_list RPAREN\n                  | ID LPAREN RPARENexpression_list : expression\n                       | expression_list COMMA expressionexpression : NOT expressionexpression :expression : ORDFUNC    expression\n                  | PREDFUNC   expression\n                  | SUCCFUNC   expression\n                  | LENGTHFUNC expressionexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,3,6,10,19,21,23,31,51,52,53,85,],[0,-1,-2,-10,-7,-8,-9,-32,-6,-5,-4,-3,]),'ID':([2,11,13,15,16,24,25,27,28,33,34,35,38,39,40,44,45,47,48,49,54,55,56,58,59,61,62,63,64,65,66,75,76,77,78,79,80,87,88,89,90,91,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,120,121,122,123,124,128,147,148,153,161,162,163,166,167,173,174,179,180,181,186,],[4,26,30,32,41,26,-12,30,-21,41,-33,-35,-38,-39,-40,74,74,74,74,84,-13,74,-22,93,30,-34,-36,-37,74,74,74,74,74,74,74,74,74,-24,-27,-28,-29,-30,30,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,41,41,74,-14,-23,74,74,-48,-57,41,74,74,41,-49,41,41,41,-55,-56,-31,]),'SEMICOLON':([4,36,37,44,45,46,55,60,64,67,68,69,70,71,72,73,74,76,77,78,79,80,81,86,87,88,89,90,91,95,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,117,118,119,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,150,151,158,159,165,178,183,186,],[5,62,63,-84,-84,-46,-84,-47,-84,-44,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-45,123,124,-27,-28,-29,-30,-41,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-83,-85,-86,-87,-88,-42,-43,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-80,-89,62,63,-78,-79,171,184,187,-31,]),'CONST':([5,],[11,]),'VAR':([5,7,8,12,17,22,24,25,54,123,171,176,184,187,],[13,13,13,-15,13,-16,-11,-12,-13,-14,13,-17,-19,-18,]),'FUNCTION':([5,7,8,12,17,22,24,25,54,123,176,184,187,],[15,15,15,-15,15,-16,-11,-12,-13,-14,-17,-19,-18,]),'BEGIN':([5,7,8,9,12,16,17,18,20,22,24,25,27,28,33,34,35,38,39,40,50,54,56,61,62,63,87,88,89,90,91,120,121,123,124,148,153,161,166,167,171,173,174,176,177,179,180,181,184,186,187,],[16,16,16,16,-15,16,16,16,16,-16,-11,-12,-20,-21,16,-33,-35,-38,-39,-40,16,-13,-22,-34,-36,-37,-24,-27,-28,-29,-30,16,16,-14,-23,-48,-57,16,16,-49,16,16,16,-17,16,16,-55,-56,-19,-31,-18,]),'DOT':([14,60,],[31,-47,]),'COMMENT':([16,33,34,35,38,39,40,61,62,63,120,121,148,153,161,166,167,173,174,179,180,181,],[35,35,-33,-35,-38,-39,-40,-34,-36,-37,35,35,-48,-57,35,35,-49,35,35,35,-55,-56,]),'WRITEFUNC':([16,33,34,35,38,39,40,61,62,63,120,121,148,153,161,166,167,173,174,179,180,181,],[42,42,-33,-35,-38,-39,-40,-34,-36,-37,42,42,-48,-57,42,42,-49,42,42,42,-55,-56,]),'WRITEFUNCLN':([16,33,34,35,38,39,40,61,62,63,120,121,148,153,161,166,167,173,174,179,180,181,],[43,43,-33,-35,-38,-39,-40,-34,-36,-37,43,43,-48,-57,43,43,-49,43,43,43,-55,-56,]),'READFUNC':([16,33,34,35,38,39,40,61,62,63,120,121,148,153,161,166,167,173,174,179,180,181,],[44,44,-33,-35,-38,-39,-40,-34,-36,-37,44,44,-48,-57,44,44,-49,44,44,44,-55,-56,]),'READFUNCLN':([16,33,34,35,38,39,40,61,62,63,120,121,148,153,161,166,167,173,174,179,180,181,],[45,45,-33,-35,-38,-39,-40,-34,-36,-37,45,45,-48,-57,45,45,-49,45,45,45,-55,-56,]),'BREAK':([16,33,34,35,38,39,40,61,62,63,120,121,148,153,161,166,167,173,174,179,180,181,],[46,46,-33,-35,-38,-39,-40,-34,-36,-37,46,46,-48,-57,46,46,-49,46,46,46,-55,-56,]),'IF':([16,33,34,35,38,39,40,61,62,63,120,121,148,153,161,166,167,173,174,179,180,181,],[47,47,-33,-35,-38,-39,-40,-34,-36,-37,147,47,-48,-57,47,147,-49,47,47,147,-55,-56,]),'WHILE':([16,33,34,35,38,39,40,61,62,63,120,121,148,153,161,166,167,173,174,179,180,181,],[48,48,-33,-35,-38,-39,-40,-34,-36,-37,48,48,-48,-57,48,48,-49,48,48,48,-55,-56,]),'FOR':([16,33,34,35,38,39,40,61,62,63,120,121,148,153,161,166,167,173,174,179,180,181,],[49,49,-33,-35,-38,-39,-40,-34,-36,-37,49,49,-48,-57,49,49,-49,49,49,49,-55,-56,]),'EQ':([26,44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[55,-84,-84,-84,-84,-84,-84,-84,-84,109,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,109,109,109,109,109,109,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,109,109,109,109,109,109,-84,-84,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-80,-89,-84,109,109,-78,-79,109,-84,-84,109,109,]),'RPAREN':([28,56,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,87,88,89,90,91,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,124,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,157,158,159,186,],[-21,-22,-84,-84,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,-24,-27,-28,-29,-30,126,127,-81,129,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,145,146,-83,-85,-86,-87,-88,-23,-84,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,159,-80,-89,-82,-78,-79,-31,]),'COLON':([29,30,93,126,],[57,-25,-26,156,]),'COMMA':([29,30,65,66,68,69,70,71,72,73,74,76,77,78,79,80,93,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,115,116,117,118,119,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,157,158,159,],[58,-25,-84,-84,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-26,128,-81,128,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-83,-85,-86,-87,-88,-84,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,128,-80,-89,-82,-78,-79,]),'LPAREN':([32,42,43,44,45,47,48,55,64,65,66,74,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[59,65,66,75,75,75,75,75,75,75,75,113,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'END':([33,34,35,38,39,40,61,62,63,148,153,167,180,181,],[60,-33,-35,-38,-39,-40,-34,-36,-37,-48,-57,-49,-55,-56,]),'ASSIGN':([41,84,],[64,122,]),'STRING':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'NUMBER':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,125,128,147,162,163,164,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,155,69,69,69,69,170,]),'FLOAT':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'FALSE':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'TRUE':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'CHAR':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'NOT':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'PLUS':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,99,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,99,99,99,99,99,99,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,99,99,99,99,99,99,-84,-84,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-80,-89,-84,99,99,-78,-79,99,-84,-84,99,99,]),'MINUS':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,100,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,100,100,100,100,100,100,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,100,100,100,100,100,100,-84,-84,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-80,-89,-84,100,100,-78,-79,100,-84,-84,100,100,]),'TIMES':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,101,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,101,101,101,101,101,101,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,101,101,101,101,101,101,-84,-84,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-80,-89,-84,101,101,-78,-79,101,-84,-84,101,101,]),'DIV':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,102,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,102,102,102,102,102,102,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,102,102,102,102,102,102,-84,-84,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-80,-89,-84,102,102,-78,-79,102,-84,-84,102,102,]),'MOD':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,103,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,103,103,103,103,103,103,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,103,103,103,103,103,103,-84,-84,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-80,-89,-84,103,103,-78,-79,103,-84,-84,103,103,]),'AND':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,104,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,104,104,104,104,104,104,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,104,104,104,104,104,104,-84,-84,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-80,-89,-84,104,104,-78,-79,104,-84,-84,104,104,]),'GT':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,105,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,105,105,105,105,105,105,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,105,105,105,105,105,105,-84,-84,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-80,-89,-84,105,105,-78,-79,105,-84,-84,105,105,]),'LT':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,106,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,106,106,106,106,106,106,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,106,106,106,106,106,106,-84,-84,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-80,-89,-84,106,106,-78,-79,106,-84,-84,106,106,]),'GE':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,107,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,107,107,107,107,107,107,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,107,107,107,107,107,107,-84,-84,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-80,-89,-84,107,107,-78,-79,107,-84,-84,107,107,]),'LE':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,108,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,108,108,108,108,108,108,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,108,108,108,108,108,108,-84,-84,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-80,-89,-84,108,108,-78,-79,108,-84,-84,108,108,]),'NE':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,110,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,110,110,110,110,110,110,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,110,110,110,110,110,110,-84,-84,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-80,-89,-84,110,110,-78,-79,110,-84,-84,110,110,]),'OR':([44,45,47,48,55,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,95,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,122,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,154,157,158,159,160,162,163,168,169,],[-84,-84,-84,-84,-84,-84,-84,-84,111,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,111,111,111,111,111,111,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,111,111,111,111,111,111,-84,-84,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-80,-89,-84,111,111,-78,-79,111,-84,-84,111,111,]),'ELSE':([44,45,46,60,64,67,68,69,70,71,72,73,74,76,77,78,79,80,81,95,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,117,118,119,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,149,150,151,152,158,159,172,185,],[-84,-84,-46,-47,-84,-44,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-45,-41,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-83,-85,-86,-87,-88,-42,-43,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-80,-89,161,-50,-51,-52,-78,-79,179,-54,]),'ORDFUNC':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'PREDFUNC':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'SUCCFUNC':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'LENGTHFUNC':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'THEN':([47,68,69,70,71,72,73,74,76,77,78,79,80,82,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,117,118,119,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,147,158,159,160,],[-84,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,120,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-83,-85,-86,-87,-88,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-80,-89,-84,-78,-79,166,]),'DO':([48,68,69,70,71,72,73,74,76,77,78,79,80,83,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,117,118,119,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,158,159,162,163,168,169,],[-84,-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,121,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-83,-85,-86,-87,-88,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-80,-89,-78,-79,-84,-84,173,174,]),'INTEGERTYPE':([57,156,182,],[88,88,88,]),'FLOATTYPE':([57,156,182,],[89,89,89,]),'BOOLEANTYPE':([57,156,182,],[90,90,90,]),'STRINGTYPE':([57,156,182,],[91,91,91,]),'ARRAY':([57,156,182,],[92,92,92,]),'RBRACKET':([68,69,70,71,72,73,74,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,115,116,117,118,119,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,158,159,170,],[-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-83,-85,-86,-87,-88,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,158,-80,-89,-78,-79,175,]),'TO':([68,69,70,71,72,73,74,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,154,158,159,],[-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-83,-85,-86,-87,-88,-84,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-80,-89,162,-78,-79,]),'DOWNTO':([68,69,70,71,72,73,74,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,115,116,117,118,119,122,130,131,132,133,134,135,136,137,138,139,140,141,142,145,146,154,158,159,],[-71,-72,-73,-74,-75,-76,-77,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-84,-83,-85,-86,-87,-88,-84,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-80,-89,163,-78,-79,]),'LBRACKET':([74,92,],[112,125,]),'DOTDOT':([155,],[164,]),'OF':([175,],[182,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'program_name':([2,],[3,]),'program_body':([5,],[6,]),'const_decls':([5,],[7,]),'func_decls':([5,7,],[8,17,]),'var_decl':([5,7,8,17,171,],[9,18,20,50,177,]),'begin_progr':([5,7,8,9,17,18,20,50,],[10,19,21,23,51,52,53,85,]),'func_decl':([5,7,8,17,],[12,12,22,22,]),'compound_statement':([5,7,8,9,16,17,18,20,33,50,120,121,161,166,171,173,174,177,179,],[14,14,14,14,37,14,14,14,37,14,151,37,37,151,178,37,37,183,151,]),'const_decl_list':([11,],[24,]),'const_decl':([11,24,],[25,54,]),'var_decl_lines':([13,59,],[27,94,]),'var_decl_line':([13,27,59,94,],[28,56,28,56,]),'id_list':([13,27,59,94,],[29,29,29,29,]),'statement_list':([16,],[33,]),'statement':([16,33,120,121,161,166,173,174,179,],[34,61,148,153,167,148,180,181,167,]),'simple_statement':([16,33,120,121,161,166,173,174,179,],[36,36,150,36,36,150,36,36,150,]),'selection_statement':([16,33,120,121,161,166,173,174,179,],[38,38,38,38,38,38,38,38,38,]),'while_statement':([16,33,120,121,161,166,173,174,179,],[39,39,39,39,39,39,39,39,39,]),'for_statement':([16,33,120,121,161,166,173,174,179,],[40,40,40,40,40,40,40,40,40,]),'expression':([44,45,47,48,55,64,65,66,75,76,77,78,79,80,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,122,128,147,162,163,],[67,81,82,83,86,95,97,97,114,115,116,117,118,119,130,131,132,133,134,135,136,137,138,139,140,141,142,143,97,154,157,160,168,169,]),'type':([57,156,182,],[87,165,186,]),'expression_list':([65,66,113,],[96,98,144,]),'inside_statement':([120,166,179,],[149,172,185,]),'inside_selection_statement':([120,166,179,],[152,152,152,]),'begin_func':([171,],[176,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> PROGRAM program_name','init',2,'p_init','parser.py',69),
  ('program_name -> ID SEMICOLON program_body','program_name',3,'p_program_name','parser.py',73),
  ('program_body -> const_decls func_decls var_decl begin_progr','program_body',4,'p_program_body','parser.py',80),
  ('program_body -> func_decls var_decl begin_progr','program_body',3,'p_program_body','parser.py',81),
  ('program_body -> const_decls var_decl begin_progr','program_body',3,'p_program_body','parser.py',82),
  ('program_body -> const_decls func_decls begin_progr','program_body',3,'p_program_body','parser.py',83),
  ('program_body -> const_decls begin_progr','program_body',2,'p_program_body','parser.py',84),
  ('program_body -> func_decls begin_progr','program_body',2,'p_program_body','parser.py',85),
  ('program_body -> var_decl begin_progr','program_body',2,'p_program_body','parser.py',86),
  ('program_body -> begin_progr','program_body',1,'p_program_body','parser.py',87),
  ('const_decls -> CONST const_decl_list','const_decls',2,'p_const_decls','parser.py',134),
  ('const_decl_list -> const_decl','const_decl_list',1,'p_const_decl_list','parser.py',138),
  ('const_decl_list -> const_decl_list const_decl','const_decl_list',2,'p_const_decl_list','parser.py',139),
  ('const_decl -> ID EQ expression SEMICOLON','const_decl',4,'p_const_decl','parser.py',146),
  ('func_decls -> func_decl','func_decls',1,'p_func_decls','parser.py',153),
  ('func_decls -> func_decls func_decl','func_decls',2,'p_func_decls','parser.py',154),
  ('func_decl -> FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func','func_decl',9,'p_func_decl','parser.py',161),
  ('begin_func -> var_decl compound_statement SEMICOLON','begin_func',3,'p_begin_funct','parser.py',170),
  ('begin_func -> compound_statement SEMICOLON','begin_func',2,'p_begin_funct','parser.py',171),
  ('var_decl -> VAR var_decl_lines','var_decl',2,'p_var_decl','parser.py',178),
  ('var_decl_lines -> var_decl_line','var_decl_lines',1,'p_var_decl_lines','parser.py',182),
  ('var_decl_lines -> var_decl_lines var_decl_line','var_decl_lines',2,'p_var_decl_lines','parser.py',183),
  ('var_decl_line -> id_list COLON type SEMICOLON','var_decl_line',4,'p_var_decl_line','parser.py',190),
  ('var_decl_line -> id_list COLON type','var_decl_line',3,'p_var_decl_line','parser.py',191),
  ('id_list -> ID','id_list',1,'p_id_list','parser.py',195),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','parser.py',196),
  ('type -> INTEGERTYPE','type',1,'p_type','parser.py',203),
  ('type -> FLOATTYPE','type',1,'p_type','parser.py',204),
  ('type -> BOOLEANTYPE','type',1,'p_type','parser.py',205),
  ('type -> STRINGTYPE','type',1,'p_type','parser.py',206),
  ('type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type','type',8,'p_type','parser.py',207),
  ('begin_progr -> compound_statement DOT','begin_progr',2,'p_begin_progr','parser.py',214),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',218),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',219),
  ('statement -> COMMENT','statement',1,'p_statement','parser.py',226),
  ('statement -> simple_statement SEMICOLON','statement',2,'p_statement','parser.py',227),
  ('statement -> compound_statement SEMICOLON','statement',2,'p_statement','parser.py',228),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',229),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',230),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',231),
  ('simple_statement -> ID ASSIGN expression','simple_statement',3,'p_simple_statement','parser.py',238),
  ('simple_statement -> WRITEFUNC LPAREN expression_list RPAREN','simple_statement',4,'p_simple_statement','parser.py',239),
  ('simple_statement -> WRITEFUNCLN LPAREN expression_list RPAREN','simple_statement',4,'p_simple_statement','parser.py',240),
  ('simple_statement -> READFUNC expression','simple_statement',2,'p_simple_statement','parser.py',241),
  ('simple_statement -> READFUNCLN expression','simple_statement',2,'p_simple_statement','parser.py',242),
  ('simple_statement -> BREAK','simple_statement',1,'p_simple_statement','parser.py',243),
  ('compound_statement -> BEGIN statement_list END','compound_statement',3,'p_compound_statement','parser.py',259),
  ('selection_statement -> IF expression THEN statement','selection_statement',4,'p_selection_statement','parser.py',263),
  ('selection_statement -> IF expression THEN inside_statement ELSE statement','selection_statement',6,'p_selection_statement','parser.py',264),
  ('inside_statement -> simple_statement','inside_statement',1,'p_inside_statement','parser.py',278),
  ('inside_statement -> compound_statement','inside_statement',1,'p_inside_statement','parser.py',279),
  ('inside_statement -> inside_selection_statement','inside_statement',1,'p_inside_statement','parser.py',280),
  ('inside_selection_statement -> IF expression THEN inside_statement','inside_selection_statement',4,'p_inside_selection_statement','parser.py',284),
  ('inside_selection_statement -> IF expression THEN inside_statement ELSE inside_statement','inside_selection_statement',6,'p_inside_selection_statement','parser.py',285),
  ('for_statement -> FOR ID ASSIGN expression TO expression DO statement','for_statement',8,'p_for_statement','parser.py',299),
  ('for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement','for_statement',8,'p_for_statement','parser.py',300),
  ('while_statement -> WHILE expression DO statement','while_statement',4,'p_while_statement','parser.py',311),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',318),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',319),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',320),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','parser.py',321),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','parser.py',322),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',323),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',324),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',325),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser.py',326),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser.py',327),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',328),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','parser.py',329),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',330),
  ('expression -> STRING','expression',1,'p_expression_value','parser.py',339),
  ('expression -> NUMBER','expression',1,'p_expression_value','parser.py',340),
  ('expression -> FLOAT','expression',1,'p_expression_value','parser.py',341),
  ('expression -> FALSE','expression',1,'p_expression_value','parser.py',342),
  ('expression -> TRUE','expression',1,'p_expression_value','parser.py',343),
  ('expression -> CHAR','expression',1,'p_expression_value','parser.py',344),
  ('expression -> ID','expression',1,'p_expression_value','parser.py',345),
  ('expression -> ID LBRACKET expression RBRACKET','expression',4,'p_expression_value','parser.py',346),
  ('expression -> ID LPAREN expression_list RPAREN','expression',4,'p_expression_function_call','parser.py',356),
  ('expression -> ID LPAREN RPAREN','expression',3,'p_expression_function_call','parser.py',357),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',370),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',371),
  ('expression -> NOT expression','expression',2,'p_expression_not','parser.py',378),
  ('expression -> <empty>','expression',0,'p_expression_empty','parser.py',382),
  ('expression -> ORDFUNC expression','expression',2,'p_expression_builtinfunction','parser.py',386),
  ('expression -> PREDFUNC expression','expression',2,'p_expression_builtinfunction','parser.py',387),
  ('expression -> SUCCFUNC expression','expression',2,'p_expression_builtinfunction','parser.py',388),
  ('expression -> LENGTHFUNC expression','expression',2,'p_expression_builtinfunction','parser.py',389),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',401),
]
