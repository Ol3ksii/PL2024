Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CASE
    PROCEDURE
    REPEAT
    TYPE
    UNTIL

Grammar

Rule 0     S' -> init
Rule 1     init -> PROGRAM program_name
Rule 2     program_name -> ID SEMICOLON program_body
Rule 3     program_body -> const_decls func_decls var_decl begin_progr
Rule 4     program_body -> func_decls var_decl begin_progr
Rule 5     program_body -> const_decls var_decl begin_progr
Rule 6     program_body -> const_decls func_decls begin_progr
Rule 7     program_body -> const_decls begin_progr
Rule 8     program_body -> func_decls begin_progr
Rule 9     program_body -> var_decl begin_progr
Rule 10    program_body -> begin_progr
Rule 11    const_decls -> CONST const_decl_list
Rule 12    const_decl_list -> const_decl
Rule 13    const_decl_list -> const_decl_list const_decl
Rule 14    const_decl -> ID EQ expression SEMICOLON
Rule 15    func_decls -> func_decl
Rule 16    func_decls -> func_decls func_decl
Rule 17    func_decl -> FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func
Rule 18    begin_func -> var_decl compound_statement SEMICOLON
Rule 19    begin_func -> compound_statement SEMICOLON
Rule 20    var_decl -> VAR var_decl_lines
Rule 21    var_decl_lines -> var_decl_line
Rule 22    var_decl_lines -> var_decl_lines var_decl_line
Rule 23    var_decl_line -> id_list COLON type SEMICOLON
Rule 24    var_decl_line -> id_list COLON type
Rule 25    id_list -> ID
Rule 26    id_list -> id_list COMMA ID
Rule 27    type -> INTEGERTYPE
Rule 28    type -> FLOATTYPE
Rule 29    type -> BOOLEANTYPE
Rule 30    type -> STRINGTYPE
Rule 31    type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type
Rule 32    begin_progr -> compound_statement DOT
Rule 33    statement_list -> statement
Rule 34    statement_list -> statement_list statement
Rule 35    statement -> COMMENT
Rule 36    statement -> simple_statement SEMICOLON
Rule 37    statement -> compound_statement SEMICOLON
Rule 38    statement -> selection_statement
Rule 39    statement -> while_statement
Rule 40    statement -> for_statement
Rule 41    simple_statement -> ID ASSIGN expression
Rule 42    simple_statement -> WRITEFUNC LPAREN expression_list RPAREN
Rule 43    simple_statement -> WRITEFUNCLN LPAREN expression_list RPAREN
Rule 44    simple_statement -> READFUNC expression
Rule 45    simple_statement -> READFUNCLN expression
Rule 46    simple_statement -> BREAK
Rule 47    compound_statement -> BEGIN statement_list END
Rule 48    selection_statement -> IF expression THEN statement
Rule 49    selection_statement -> IF expression THEN inside_statement ELSE statement
Rule 50    inside_statement -> simple_statement
Rule 51    inside_statement -> compound_statement
Rule 52    inside_statement -> inside_selection_statement
Rule 53    inside_selection_statement -> IF expression THEN inside_statement
Rule 54    inside_selection_statement -> IF expression THEN inside_statement ELSE inside_statement
Rule 55    for_statement -> FOR ID ASSIGN expression TO expression DO statement
Rule 56    for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement
Rule 57    while_statement -> WHILE expression DO statement
Rule 58    expression -> expression PLUS expression
Rule 59    expression -> expression MINUS expression
Rule 60    expression -> expression TIMES expression
Rule 61    expression -> expression DIV expression
Rule 62    expression -> expression MOD expression
Rule 63    expression -> expression AND expression
Rule 64    expression -> expression GT expression
Rule 65    expression -> expression LT expression
Rule 66    expression -> expression GE expression
Rule 67    expression -> expression LE expression
Rule 68    expression -> expression EQ expression
Rule 69    expression -> expression NE expression
Rule 70    expression -> expression OR expression
Rule 71    expression -> STRING
Rule 72    expression -> NUMBER
Rule 73    expression -> FLOAT
Rule 74    expression -> FALSE
Rule 75    expression -> TRUE
Rule 76    expression -> CHAR
Rule 77    expression -> ID
Rule 78    expression -> ID LBRACKET expression RBRACKET
Rule 79    expression -> ID LPAREN expression_list RPAREN
Rule 80    expression -> ID LPAREN RPAREN
Rule 81    expression_list -> expression
Rule 82    expression_list -> expression_list COMMA expression
Rule 83    expression -> NOT expression
Rule 84    expression -> <empty>
Rule 85    expression -> ORDFUNC expression
Rule 86    expression -> PREDFUNC expression
Rule 87    expression -> SUCCFUNC expression
Rule 88    expression -> LENGTHFUNC expression
Rule 89    expression -> LPAREN expression RPAREN

Terminals, with rules where they appear

AND                  : 63
ARRAY                : 31
ASSIGN               : 41 55 56
BEGIN                : 47
BOOLEANTYPE          : 29
BREAK                : 46
CASE                 : 
CHAR                 : 76
COLON                : 17 23 24
COMMA                : 26 82
COMMENT              : 35
CONST                : 11
DIV                  : 61
DO                   : 55 56 57
DOT                  : 32
DOTDOT               : 31
DOWNTO               : 56
ELSE                 : 49 54
END                  : 47
EQ                   : 14 68
FALSE                : 74
FLOAT                : 73
FLOATTYPE            : 28
FOR                  : 55 56
FUNCTION             : 17
GE                   : 66
GT                   : 64
ID                   : 2 14 17 25 26 41 55 56 77 78 79 80
IF                   : 48 49 53 54
INTEGERTYPE          : 27
LBRACKET             : 31 78
LE                   : 67
LENGTHFUNC           : 88
LPAREN               : 17 42 43 79 80 89
LT                   : 65
MINUS                : 59
MOD                  : 62
NE                   : 69
NOT                  : 83
NUMBER               : 31 31 72
OF                   : 31
OR                   : 70
ORDFUNC              : 85
PLUS                 : 58
PREDFUNC             : 86
PROCEDURE            : 
PROGRAM              : 1
RBRACKET             : 31 78
READFUNC             : 44
READFUNCLN           : 45
REPEAT               : 
RPAREN               : 17 42 43 79 80 89
SEMICOLON            : 2 14 17 18 19 23 36 37
STRING               : 71
STRINGTYPE           : 30
SUCCFUNC             : 87
THEN                 : 48 49 53 54
TIMES                : 60
TO                   : 55
TRUE                 : 75
TYPE                 : 
UNTIL                : 
VAR                  : 20
WHILE                : 57
WRITEFUNC            : 42
WRITEFUNCLN          : 43
error                : 

Nonterminals, with rules where they appear

begin_func           : 17
begin_progr          : 3 4 5 6 7 8 9 10
compound_statement   : 18 19 32 37 51
const_decl           : 12 13
const_decl_list      : 11 13
const_decls          : 3 5 6 7
expression           : 14 41 44 45 48 49 53 54 55 55 56 56 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 78 81 82 83 85 86 87 88 89
expression_list      : 42 43 79 82
for_statement        : 40
func_decl            : 15 16
func_decls           : 3 4 6 8 16
id_list              : 23 24 26
init                 : 0
inside_selection_statement : 52
inside_statement     : 49 53 54 54
program_body         : 2
program_name         : 1
selection_statement  : 38
simple_statement     : 36 50
statement            : 33 34 48 49 55 56 57
statement_list       : 34 47
type                 : 17 23 24 31
var_decl             : 3 4 5 9 18
var_decl_line        : 21 22
var_decl_lines       : 17 20 22
while_statement      : 39

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . PROGRAM program_name

    PROGRAM         shift and go to state 2

    init                           shift and go to state 1

state 1

    (0) S' -> init .



state 2

    (1) init -> PROGRAM . program_name
    (2) program_name -> . ID SEMICOLON program_body

    ID              shift and go to state 4

    program_name                   shift and go to state 3

state 3

    (1) init -> PROGRAM program_name .

    $end            reduce using rule 1 (init -> PROGRAM program_name .)


state 4

    (2) program_name -> ID . SEMICOLON program_body

    SEMICOLON       shift and go to state 5


state 5

    (2) program_name -> ID SEMICOLON . program_body
    (3) program_body -> . const_decls func_decls var_decl begin_progr
    (4) program_body -> . func_decls var_decl begin_progr
    (5) program_body -> . const_decls var_decl begin_progr
    (6) program_body -> . const_decls func_decls begin_progr
    (7) program_body -> . const_decls begin_progr
    (8) program_body -> . func_decls begin_progr
    (9) program_body -> . var_decl begin_progr
    (10) program_body -> . begin_progr
    (11) const_decls -> . CONST const_decl_list
    (15) func_decls -> . func_decl
    (16) func_decls -> . func_decls func_decl
    (20) var_decl -> . VAR var_decl_lines
    (32) begin_progr -> . compound_statement DOT
    (17) func_decl -> . FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func
    (47) compound_statement -> . BEGIN statement_list END

    CONST           shift and go to state 11
    VAR             shift and go to state 13
    FUNCTION        shift and go to state 15
    BEGIN           shift and go to state 16

    program_body                   shift and go to state 6
    const_decls                    shift and go to state 7
    func_decls                     shift and go to state 8
    var_decl                       shift and go to state 9
    begin_progr                    shift and go to state 10
    func_decl                      shift and go to state 12
    compound_statement             shift and go to state 14

state 6

    (2) program_name -> ID SEMICOLON program_body .

    $end            reduce using rule 2 (program_name -> ID SEMICOLON program_body .)


state 7

    (3) program_body -> const_decls . func_decls var_decl begin_progr
    (5) program_body -> const_decls . var_decl begin_progr
    (6) program_body -> const_decls . func_decls begin_progr
    (7) program_body -> const_decls . begin_progr
    (15) func_decls -> . func_decl
    (16) func_decls -> . func_decls func_decl
    (20) var_decl -> . VAR var_decl_lines
    (32) begin_progr -> . compound_statement DOT
    (17) func_decl -> . FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func
    (47) compound_statement -> . BEGIN statement_list END

    VAR             shift and go to state 13
    FUNCTION        shift and go to state 15
    BEGIN           shift and go to state 16

    func_decls                     shift and go to state 17
    var_decl                       shift and go to state 18
    begin_progr                    shift and go to state 19
    func_decl                      shift and go to state 12
    compound_statement             shift and go to state 14

state 8

    (4) program_body -> func_decls . var_decl begin_progr
    (8) program_body -> func_decls . begin_progr
    (16) func_decls -> func_decls . func_decl
    (20) var_decl -> . VAR var_decl_lines
    (32) begin_progr -> . compound_statement DOT
    (17) func_decl -> . FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func
    (47) compound_statement -> . BEGIN statement_list END

    VAR             shift and go to state 13
    FUNCTION        shift and go to state 15
    BEGIN           shift and go to state 16

    var_decl                       shift and go to state 20
    begin_progr                    shift and go to state 21
    func_decl                      shift and go to state 22
    compound_statement             shift and go to state 14

state 9

    (9) program_body -> var_decl . begin_progr
    (32) begin_progr -> . compound_statement DOT
    (47) compound_statement -> . BEGIN statement_list END

    BEGIN           shift and go to state 16

    begin_progr                    shift and go to state 23
    compound_statement             shift and go to state 14

state 10

    (10) program_body -> begin_progr .

    $end            reduce using rule 10 (program_body -> begin_progr .)


state 11

    (11) const_decls -> CONST . const_decl_list
    (12) const_decl_list -> . const_decl
    (13) const_decl_list -> . const_decl_list const_decl
    (14) const_decl -> . ID EQ expression SEMICOLON

    ID              shift and go to state 26

    const_decl_list                shift and go to state 24
    const_decl                     shift and go to state 25

state 12

    (15) func_decls -> func_decl .

    VAR             reduce using rule 15 (func_decls -> func_decl .)
    FUNCTION        reduce using rule 15 (func_decls -> func_decl .)
    BEGIN           reduce using rule 15 (func_decls -> func_decl .)


state 13

    (20) var_decl -> VAR . var_decl_lines
    (21) var_decl_lines -> . var_decl_line
    (22) var_decl_lines -> . var_decl_lines var_decl_line
    (23) var_decl_line -> . id_list COLON type SEMICOLON
    (24) var_decl_line -> . id_list COLON type
    (25) id_list -> . ID
    (26) id_list -> . id_list COMMA ID

    ID              shift and go to state 30

    var_decl_lines                 shift and go to state 27
    var_decl_line                  shift and go to state 28
    id_list                        shift and go to state 29

state 14

    (32) begin_progr -> compound_statement . DOT

    DOT             shift and go to state 31


state 15

    (17) func_decl -> FUNCTION . ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func

    ID              shift and go to state 32


state 16

    (47) compound_statement -> BEGIN . statement_list END
    (33) statement_list -> . statement
    (34) statement_list -> . statement_list statement
    (35) statement -> . COMMENT
    (36) statement -> . simple_statement SEMICOLON
    (37) statement -> . compound_statement SEMICOLON
    (38) statement -> . selection_statement
    (39) statement -> . while_statement
    (40) statement -> . for_statement
    (41) simple_statement -> . ID ASSIGN expression
    (42) simple_statement -> . WRITEFUNC LPAREN expression_list RPAREN
    (43) simple_statement -> . WRITEFUNCLN LPAREN expression_list RPAREN
    (44) simple_statement -> . READFUNC expression
    (45) simple_statement -> . READFUNCLN expression
    (46) simple_statement -> . BREAK
    (47) compound_statement -> . BEGIN statement_list END
    (48) selection_statement -> . IF expression THEN statement
    (49) selection_statement -> . IF expression THEN inside_statement ELSE statement
    (57) while_statement -> . WHILE expression DO statement
    (55) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement

    COMMENT         shift and go to state 35
    ID              shift and go to state 41
    WRITEFUNC       shift and go to state 42
    WRITEFUNCLN     shift and go to state 43
    READFUNC        shift and go to state 44
    READFUNCLN      shift and go to state 45
    BREAK           shift and go to state 46
    BEGIN           shift and go to state 16
    IF              shift and go to state 47
    WHILE           shift and go to state 48
    FOR             shift and go to state 49

    statement_list                 shift and go to state 33
    statement                      shift and go to state 34
    simple_statement               shift and go to state 36
    compound_statement             shift and go to state 37
    selection_statement            shift and go to state 38
    while_statement                shift and go to state 39
    for_statement                  shift and go to state 40

state 17

    (3) program_body -> const_decls func_decls . var_decl begin_progr
    (6) program_body -> const_decls func_decls . begin_progr
    (16) func_decls -> func_decls . func_decl
    (20) var_decl -> . VAR var_decl_lines
    (32) begin_progr -> . compound_statement DOT
    (17) func_decl -> . FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func
    (47) compound_statement -> . BEGIN statement_list END

    VAR             shift and go to state 13
    FUNCTION        shift and go to state 15
    BEGIN           shift and go to state 16

    var_decl                       shift and go to state 50
    begin_progr                    shift and go to state 51
    func_decl                      shift and go to state 22
    compound_statement             shift and go to state 14

state 18

    (5) program_body -> const_decls var_decl . begin_progr
    (32) begin_progr -> . compound_statement DOT
    (47) compound_statement -> . BEGIN statement_list END

    BEGIN           shift and go to state 16

    begin_progr                    shift and go to state 52
    compound_statement             shift and go to state 14

state 19

    (7) program_body -> const_decls begin_progr .

    $end            reduce using rule 7 (program_body -> const_decls begin_progr .)


state 20

    (4) program_body -> func_decls var_decl . begin_progr
    (32) begin_progr -> . compound_statement DOT
    (47) compound_statement -> . BEGIN statement_list END

    BEGIN           shift and go to state 16

    begin_progr                    shift and go to state 53
    compound_statement             shift and go to state 14

state 21

    (8) program_body -> func_decls begin_progr .

    $end            reduce using rule 8 (program_body -> func_decls begin_progr .)


state 22

    (16) func_decls -> func_decls func_decl .

    VAR             reduce using rule 16 (func_decls -> func_decls func_decl .)
    FUNCTION        reduce using rule 16 (func_decls -> func_decls func_decl .)
    BEGIN           reduce using rule 16 (func_decls -> func_decls func_decl .)


state 23

    (9) program_body -> var_decl begin_progr .

    $end            reduce using rule 9 (program_body -> var_decl begin_progr .)


state 24

    (11) const_decls -> CONST const_decl_list .
    (13) const_decl_list -> const_decl_list . const_decl
    (14) const_decl -> . ID EQ expression SEMICOLON

    VAR             reduce using rule 11 (const_decls -> CONST const_decl_list .)
    FUNCTION        reduce using rule 11 (const_decls -> CONST const_decl_list .)
    BEGIN           reduce using rule 11 (const_decls -> CONST const_decl_list .)
    ID              shift and go to state 26

    const_decl                     shift and go to state 54

state 25

    (12) const_decl_list -> const_decl .

    ID              reduce using rule 12 (const_decl_list -> const_decl .)
    VAR             reduce using rule 12 (const_decl_list -> const_decl .)
    FUNCTION        reduce using rule 12 (const_decl_list -> const_decl .)
    BEGIN           reduce using rule 12 (const_decl_list -> const_decl .)


state 26

    (14) const_decl -> ID . EQ expression SEMICOLON

    EQ              shift and go to state 55


state 27

    (20) var_decl -> VAR var_decl_lines .
    (22) var_decl_lines -> var_decl_lines . var_decl_line
    (23) var_decl_line -> . id_list COLON type SEMICOLON
    (24) var_decl_line -> . id_list COLON type
    (25) id_list -> . ID
    (26) id_list -> . id_list COMMA ID

    BEGIN           reduce using rule 20 (var_decl -> VAR var_decl_lines .)
    ID              shift and go to state 30

    var_decl_line                  shift and go to state 56
    id_list                        shift and go to state 29

state 28

    (21) var_decl_lines -> var_decl_line .

    ID              reduce using rule 21 (var_decl_lines -> var_decl_line .)
    BEGIN           reduce using rule 21 (var_decl_lines -> var_decl_line .)
    RPAREN          reduce using rule 21 (var_decl_lines -> var_decl_line .)


state 29

    (23) var_decl_line -> id_list . COLON type SEMICOLON
    (24) var_decl_line -> id_list . COLON type
    (26) id_list -> id_list . COMMA ID

    COLON           shift and go to state 57
    COMMA           shift and go to state 58


state 30

    (25) id_list -> ID .

    COLON           reduce using rule 25 (id_list -> ID .)
    COMMA           reduce using rule 25 (id_list -> ID .)


state 31

    (32) begin_progr -> compound_statement DOT .

    $end            reduce using rule 32 (begin_progr -> compound_statement DOT .)


state 32

    (17) func_decl -> FUNCTION ID . LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func

    LPAREN          shift and go to state 59


state 33

    (47) compound_statement -> BEGIN statement_list . END
    (34) statement_list -> statement_list . statement
    (35) statement -> . COMMENT
    (36) statement -> . simple_statement SEMICOLON
    (37) statement -> . compound_statement SEMICOLON
    (38) statement -> . selection_statement
    (39) statement -> . while_statement
    (40) statement -> . for_statement
    (41) simple_statement -> . ID ASSIGN expression
    (42) simple_statement -> . WRITEFUNC LPAREN expression_list RPAREN
    (43) simple_statement -> . WRITEFUNCLN LPAREN expression_list RPAREN
    (44) simple_statement -> . READFUNC expression
    (45) simple_statement -> . READFUNCLN expression
    (46) simple_statement -> . BREAK
    (47) compound_statement -> . BEGIN statement_list END
    (48) selection_statement -> . IF expression THEN statement
    (49) selection_statement -> . IF expression THEN inside_statement ELSE statement
    (57) while_statement -> . WHILE expression DO statement
    (55) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement

    END             shift and go to state 60
    COMMENT         shift and go to state 35
    ID              shift and go to state 41
    WRITEFUNC       shift and go to state 42
    WRITEFUNCLN     shift and go to state 43
    READFUNC        shift and go to state 44
    READFUNCLN      shift and go to state 45
    BREAK           shift and go to state 46
    BEGIN           shift and go to state 16
    IF              shift and go to state 47
    WHILE           shift and go to state 48
    FOR             shift and go to state 49

    statement                      shift and go to state 61
    simple_statement               shift and go to state 36
    compound_statement             shift and go to state 37
    selection_statement            shift and go to state 38
    while_statement                shift and go to state 39
    for_statement                  shift and go to state 40

state 34

    (33) statement_list -> statement .

    END             reduce using rule 33 (statement_list -> statement .)
    COMMENT         reduce using rule 33 (statement_list -> statement .)
    ID              reduce using rule 33 (statement_list -> statement .)
    WRITEFUNC       reduce using rule 33 (statement_list -> statement .)
    WRITEFUNCLN     reduce using rule 33 (statement_list -> statement .)
    READFUNC        reduce using rule 33 (statement_list -> statement .)
    READFUNCLN      reduce using rule 33 (statement_list -> statement .)
    BREAK           reduce using rule 33 (statement_list -> statement .)
    BEGIN           reduce using rule 33 (statement_list -> statement .)
    IF              reduce using rule 33 (statement_list -> statement .)
    WHILE           reduce using rule 33 (statement_list -> statement .)
    FOR             reduce using rule 33 (statement_list -> statement .)


state 35

    (35) statement -> COMMENT .

    END             reduce using rule 35 (statement -> COMMENT .)
    COMMENT         reduce using rule 35 (statement -> COMMENT .)
    ID              reduce using rule 35 (statement -> COMMENT .)
    WRITEFUNC       reduce using rule 35 (statement -> COMMENT .)
    WRITEFUNCLN     reduce using rule 35 (statement -> COMMENT .)
    READFUNC        reduce using rule 35 (statement -> COMMENT .)
    READFUNCLN      reduce using rule 35 (statement -> COMMENT .)
    BREAK           reduce using rule 35 (statement -> COMMENT .)
    BEGIN           reduce using rule 35 (statement -> COMMENT .)
    IF              reduce using rule 35 (statement -> COMMENT .)
    WHILE           reduce using rule 35 (statement -> COMMENT .)
    FOR             reduce using rule 35 (statement -> COMMENT .)


state 36

    (36) statement -> simple_statement . SEMICOLON

    SEMICOLON       shift and go to state 62


state 37

    (37) statement -> compound_statement . SEMICOLON

    SEMICOLON       shift and go to state 63


state 38

    (38) statement -> selection_statement .

    END             reduce using rule 38 (statement -> selection_statement .)
    COMMENT         reduce using rule 38 (statement -> selection_statement .)
    ID              reduce using rule 38 (statement -> selection_statement .)
    WRITEFUNC       reduce using rule 38 (statement -> selection_statement .)
    WRITEFUNCLN     reduce using rule 38 (statement -> selection_statement .)
    READFUNC        reduce using rule 38 (statement -> selection_statement .)
    READFUNCLN      reduce using rule 38 (statement -> selection_statement .)
    BREAK           reduce using rule 38 (statement -> selection_statement .)
    BEGIN           reduce using rule 38 (statement -> selection_statement .)
    IF              reduce using rule 38 (statement -> selection_statement .)
    WHILE           reduce using rule 38 (statement -> selection_statement .)
    FOR             reduce using rule 38 (statement -> selection_statement .)


state 39

    (39) statement -> while_statement .

    END             reduce using rule 39 (statement -> while_statement .)
    COMMENT         reduce using rule 39 (statement -> while_statement .)
    ID              reduce using rule 39 (statement -> while_statement .)
    WRITEFUNC       reduce using rule 39 (statement -> while_statement .)
    WRITEFUNCLN     reduce using rule 39 (statement -> while_statement .)
    READFUNC        reduce using rule 39 (statement -> while_statement .)
    READFUNCLN      reduce using rule 39 (statement -> while_statement .)
    BREAK           reduce using rule 39 (statement -> while_statement .)
    BEGIN           reduce using rule 39 (statement -> while_statement .)
    IF              reduce using rule 39 (statement -> while_statement .)
    WHILE           reduce using rule 39 (statement -> while_statement .)
    FOR             reduce using rule 39 (statement -> while_statement .)


state 40

    (40) statement -> for_statement .

    END             reduce using rule 40 (statement -> for_statement .)
    COMMENT         reduce using rule 40 (statement -> for_statement .)
    ID              reduce using rule 40 (statement -> for_statement .)
    WRITEFUNC       reduce using rule 40 (statement -> for_statement .)
    WRITEFUNCLN     reduce using rule 40 (statement -> for_statement .)
    READFUNC        reduce using rule 40 (statement -> for_statement .)
    READFUNCLN      reduce using rule 40 (statement -> for_statement .)
    BREAK           reduce using rule 40 (statement -> for_statement .)
    BEGIN           reduce using rule 40 (statement -> for_statement .)
    IF              reduce using rule 40 (statement -> for_statement .)
    WHILE           reduce using rule 40 (statement -> for_statement .)
    FOR             reduce using rule 40 (statement -> for_statement .)


state 41

    (41) simple_statement -> ID . ASSIGN expression

    ASSIGN          shift and go to state 64


state 42

    (42) simple_statement -> WRITEFUNC . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 65


state 43

    (43) simple_statement -> WRITEFUNCLN . LPAREN expression_list RPAREN

    LPAREN          shift and go to state 66


state 44

    (44) simple_statement -> READFUNC . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 67

state 45

    (45) simple_statement -> READFUNCLN . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 81

state 46

    (46) simple_statement -> BREAK .

    SEMICOLON       reduce using rule 46 (simple_statement -> BREAK .)
    ELSE            reduce using rule 46 (simple_statement -> BREAK .)


state 47

    (48) selection_statement -> IF . expression THEN statement
    (49) selection_statement -> IF . expression THEN inside_statement ELSE statement
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    THEN            reduce using rule 84 (expression -> .)
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 82

state 48

    (57) while_statement -> WHILE . expression DO statement
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    DO              reduce using rule 84 (expression -> .)
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 83

state 49

    (55) for_statement -> FOR . ID ASSIGN expression TO expression DO statement
    (56) for_statement -> FOR . ID ASSIGN expression DOWNTO expression DO statement

    ID              shift and go to state 84


state 50

    (3) program_body -> const_decls func_decls var_decl . begin_progr
    (32) begin_progr -> . compound_statement DOT
    (47) compound_statement -> . BEGIN statement_list END

    BEGIN           shift and go to state 16

    begin_progr                    shift and go to state 85
    compound_statement             shift and go to state 14

state 51

    (6) program_body -> const_decls func_decls begin_progr .

    $end            reduce using rule 6 (program_body -> const_decls func_decls begin_progr .)


state 52

    (5) program_body -> const_decls var_decl begin_progr .

    $end            reduce using rule 5 (program_body -> const_decls var_decl begin_progr .)


state 53

    (4) program_body -> func_decls var_decl begin_progr .

    $end            reduce using rule 4 (program_body -> func_decls var_decl begin_progr .)


state 54

    (13) const_decl_list -> const_decl_list const_decl .

    ID              reduce using rule 13 (const_decl_list -> const_decl_list const_decl .)
    VAR             reduce using rule 13 (const_decl_list -> const_decl_list const_decl .)
    FUNCTION        reduce using rule 13 (const_decl_list -> const_decl_list const_decl .)
    BEGIN           reduce using rule 13 (const_decl_list -> const_decl_list const_decl .)


state 55

    (14) const_decl -> ID EQ . expression SEMICOLON
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    SEMICOLON       reduce using rule 84 (expression -> .)
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 86

state 56

    (22) var_decl_lines -> var_decl_lines var_decl_line .

    ID              reduce using rule 22 (var_decl_lines -> var_decl_lines var_decl_line .)
    BEGIN           reduce using rule 22 (var_decl_lines -> var_decl_lines var_decl_line .)
    RPAREN          reduce using rule 22 (var_decl_lines -> var_decl_lines var_decl_line .)


state 57

    (23) var_decl_line -> id_list COLON . type SEMICOLON
    (24) var_decl_line -> id_list COLON . type
    (27) type -> . INTEGERTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . BOOLEANTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type

    INTEGERTYPE     shift and go to state 88
    FLOATTYPE       shift and go to state 89
    BOOLEANTYPE     shift and go to state 90
    STRINGTYPE      shift and go to state 91
    ARRAY           shift and go to state 92

    type                           shift and go to state 87

state 58

    (26) id_list -> id_list COMMA . ID

    ID              shift and go to state 93


state 59

    (17) func_decl -> FUNCTION ID LPAREN . var_decl_lines RPAREN COLON type SEMICOLON begin_func
    (21) var_decl_lines -> . var_decl_line
    (22) var_decl_lines -> . var_decl_lines var_decl_line
    (23) var_decl_line -> . id_list COLON type SEMICOLON
    (24) var_decl_line -> . id_list COLON type
    (25) id_list -> . ID
    (26) id_list -> . id_list COMMA ID

    ID              shift and go to state 30

    var_decl_lines                 shift and go to state 94
    var_decl_line                  shift and go to state 28
    id_list                        shift and go to state 29

state 60

    (47) compound_statement -> BEGIN statement_list END .

    DOT             reduce using rule 47 (compound_statement -> BEGIN statement_list END .)
    SEMICOLON       reduce using rule 47 (compound_statement -> BEGIN statement_list END .)
    ELSE            reduce using rule 47 (compound_statement -> BEGIN statement_list END .)


state 61

    (34) statement_list -> statement_list statement .

    END             reduce using rule 34 (statement_list -> statement_list statement .)
    COMMENT         reduce using rule 34 (statement_list -> statement_list statement .)
    ID              reduce using rule 34 (statement_list -> statement_list statement .)
    WRITEFUNC       reduce using rule 34 (statement_list -> statement_list statement .)
    WRITEFUNCLN     reduce using rule 34 (statement_list -> statement_list statement .)
    READFUNC        reduce using rule 34 (statement_list -> statement_list statement .)
    READFUNCLN      reduce using rule 34 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 34 (statement_list -> statement_list statement .)
    BEGIN           reduce using rule 34 (statement_list -> statement_list statement .)
    IF              reduce using rule 34 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 34 (statement_list -> statement_list statement .)
    FOR             reduce using rule 34 (statement_list -> statement_list statement .)


state 62

    (36) statement -> simple_statement SEMICOLON .

    END             reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    COMMENT         reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    ID              reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    WRITEFUNC       reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    WRITEFUNCLN     reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    READFUNC        reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    READFUNCLN      reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    BREAK           reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    BEGIN           reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    IF              reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    WHILE           reduce using rule 36 (statement -> simple_statement SEMICOLON .)
    FOR             reduce using rule 36 (statement -> simple_statement SEMICOLON .)


state 63

    (37) statement -> compound_statement SEMICOLON .

    END             reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    COMMENT         reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    ID              reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    WRITEFUNC       reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    WRITEFUNCLN     reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    READFUNC        reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    READFUNCLN      reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    BREAK           reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    BEGIN           reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    IF              reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    WHILE           reduce using rule 37 (statement -> compound_statement SEMICOLON .)
    FOR             reduce using rule 37 (statement -> compound_statement SEMICOLON .)


state 64

    (41) simple_statement -> ID ASSIGN . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 95

state 65

    (42) simple_statement -> WRITEFUNC LPAREN . expression_list RPAREN
    (81) expression_list -> . expression
    (82) expression_list -> . expression_list COMMA expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression_list                shift and go to state 96
    expression                     shift and go to state 97

state 66

    (43) simple_statement -> WRITEFUNCLN LPAREN . expression_list RPAREN
    (81) expression_list -> . expression
    (82) expression_list -> . expression_list COMMA expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression_list                shift and go to state 98
    expression                     shift and go to state 97

state 67

    (44) simple_statement -> READFUNC expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    SEMICOLON       reduce using rule 44 (simple_statement -> READFUNC expression .)
    ELSE            reduce using rule 44 (simple_statement -> READFUNC expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 68

    (71) expression -> STRING .

    PLUS            reduce using rule 71 (expression -> STRING .)
    MINUS           reduce using rule 71 (expression -> STRING .)
    TIMES           reduce using rule 71 (expression -> STRING .)
    DIV             reduce using rule 71 (expression -> STRING .)
    MOD             reduce using rule 71 (expression -> STRING .)
    AND             reduce using rule 71 (expression -> STRING .)
    GT              reduce using rule 71 (expression -> STRING .)
    LT              reduce using rule 71 (expression -> STRING .)
    GE              reduce using rule 71 (expression -> STRING .)
    LE              reduce using rule 71 (expression -> STRING .)
    EQ              reduce using rule 71 (expression -> STRING .)
    NE              reduce using rule 71 (expression -> STRING .)
    OR              reduce using rule 71 (expression -> STRING .)
    SEMICOLON       reduce using rule 71 (expression -> STRING .)
    ELSE            reduce using rule 71 (expression -> STRING .)
    THEN            reduce using rule 71 (expression -> STRING .)
    DO              reduce using rule 71 (expression -> STRING .)
    RPAREN          reduce using rule 71 (expression -> STRING .)
    COMMA           reduce using rule 71 (expression -> STRING .)
    RBRACKET        reduce using rule 71 (expression -> STRING .)
    TO              reduce using rule 71 (expression -> STRING .)
    DOWNTO          reduce using rule 71 (expression -> STRING .)


state 69

    (72) expression -> NUMBER .

    PLUS            reduce using rule 72 (expression -> NUMBER .)
    MINUS           reduce using rule 72 (expression -> NUMBER .)
    TIMES           reduce using rule 72 (expression -> NUMBER .)
    DIV             reduce using rule 72 (expression -> NUMBER .)
    MOD             reduce using rule 72 (expression -> NUMBER .)
    AND             reduce using rule 72 (expression -> NUMBER .)
    GT              reduce using rule 72 (expression -> NUMBER .)
    LT              reduce using rule 72 (expression -> NUMBER .)
    GE              reduce using rule 72 (expression -> NUMBER .)
    LE              reduce using rule 72 (expression -> NUMBER .)
    EQ              reduce using rule 72 (expression -> NUMBER .)
    NE              reduce using rule 72 (expression -> NUMBER .)
    OR              reduce using rule 72 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 72 (expression -> NUMBER .)
    ELSE            reduce using rule 72 (expression -> NUMBER .)
    THEN            reduce using rule 72 (expression -> NUMBER .)
    DO              reduce using rule 72 (expression -> NUMBER .)
    RPAREN          reduce using rule 72 (expression -> NUMBER .)
    COMMA           reduce using rule 72 (expression -> NUMBER .)
    RBRACKET        reduce using rule 72 (expression -> NUMBER .)
    TO              reduce using rule 72 (expression -> NUMBER .)
    DOWNTO          reduce using rule 72 (expression -> NUMBER .)


state 70

    (73) expression -> FLOAT .

    PLUS            reduce using rule 73 (expression -> FLOAT .)
    MINUS           reduce using rule 73 (expression -> FLOAT .)
    TIMES           reduce using rule 73 (expression -> FLOAT .)
    DIV             reduce using rule 73 (expression -> FLOAT .)
    MOD             reduce using rule 73 (expression -> FLOAT .)
    AND             reduce using rule 73 (expression -> FLOAT .)
    GT              reduce using rule 73 (expression -> FLOAT .)
    LT              reduce using rule 73 (expression -> FLOAT .)
    GE              reduce using rule 73 (expression -> FLOAT .)
    LE              reduce using rule 73 (expression -> FLOAT .)
    EQ              reduce using rule 73 (expression -> FLOAT .)
    NE              reduce using rule 73 (expression -> FLOAT .)
    OR              reduce using rule 73 (expression -> FLOAT .)
    SEMICOLON       reduce using rule 73 (expression -> FLOAT .)
    ELSE            reduce using rule 73 (expression -> FLOAT .)
    THEN            reduce using rule 73 (expression -> FLOAT .)
    DO              reduce using rule 73 (expression -> FLOAT .)
    RPAREN          reduce using rule 73 (expression -> FLOAT .)
    COMMA           reduce using rule 73 (expression -> FLOAT .)
    RBRACKET        reduce using rule 73 (expression -> FLOAT .)
    TO              reduce using rule 73 (expression -> FLOAT .)
    DOWNTO          reduce using rule 73 (expression -> FLOAT .)


state 71

    (74) expression -> FALSE .

    PLUS            reduce using rule 74 (expression -> FALSE .)
    MINUS           reduce using rule 74 (expression -> FALSE .)
    TIMES           reduce using rule 74 (expression -> FALSE .)
    DIV             reduce using rule 74 (expression -> FALSE .)
    MOD             reduce using rule 74 (expression -> FALSE .)
    AND             reduce using rule 74 (expression -> FALSE .)
    GT              reduce using rule 74 (expression -> FALSE .)
    LT              reduce using rule 74 (expression -> FALSE .)
    GE              reduce using rule 74 (expression -> FALSE .)
    LE              reduce using rule 74 (expression -> FALSE .)
    EQ              reduce using rule 74 (expression -> FALSE .)
    NE              reduce using rule 74 (expression -> FALSE .)
    OR              reduce using rule 74 (expression -> FALSE .)
    SEMICOLON       reduce using rule 74 (expression -> FALSE .)
    ELSE            reduce using rule 74 (expression -> FALSE .)
    THEN            reduce using rule 74 (expression -> FALSE .)
    DO              reduce using rule 74 (expression -> FALSE .)
    RPAREN          reduce using rule 74 (expression -> FALSE .)
    COMMA           reduce using rule 74 (expression -> FALSE .)
    RBRACKET        reduce using rule 74 (expression -> FALSE .)
    TO              reduce using rule 74 (expression -> FALSE .)
    DOWNTO          reduce using rule 74 (expression -> FALSE .)


state 72

    (75) expression -> TRUE .

    PLUS            reduce using rule 75 (expression -> TRUE .)
    MINUS           reduce using rule 75 (expression -> TRUE .)
    TIMES           reduce using rule 75 (expression -> TRUE .)
    DIV             reduce using rule 75 (expression -> TRUE .)
    MOD             reduce using rule 75 (expression -> TRUE .)
    AND             reduce using rule 75 (expression -> TRUE .)
    GT              reduce using rule 75 (expression -> TRUE .)
    LT              reduce using rule 75 (expression -> TRUE .)
    GE              reduce using rule 75 (expression -> TRUE .)
    LE              reduce using rule 75 (expression -> TRUE .)
    EQ              reduce using rule 75 (expression -> TRUE .)
    NE              reduce using rule 75 (expression -> TRUE .)
    OR              reduce using rule 75 (expression -> TRUE .)
    SEMICOLON       reduce using rule 75 (expression -> TRUE .)
    ELSE            reduce using rule 75 (expression -> TRUE .)
    THEN            reduce using rule 75 (expression -> TRUE .)
    DO              reduce using rule 75 (expression -> TRUE .)
    RPAREN          reduce using rule 75 (expression -> TRUE .)
    COMMA           reduce using rule 75 (expression -> TRUE .)
    RBRACKET        reduce using rule 75 (expression -> TRUE .)
    TO              reduce using rule 75 (expression -> TRUE .)
    DOWNTO          reduce using rule 75 (expression -> TRUE .)


state 73

    (76) expression -> CHAR .

    PLUS            reduce using rule 76 (expression -> CHAR .)
    MINUS           reduce using rule 76 (expression -> CHAR .)
    TIMES           reduce using rule 76 (expression -> CHAR .)
    DIV             reduce using rule 76 (expression -> CHAR .)
    MOD             reduce using rule 76 (expression -> CHAR .)
    AND             reduce using rule 76 (expression -> CHAR .)
    GT              reduce using rule 76 (expression -> CHAR .)
    LT              reduce using rule 76 (expression -> CHAR .)
    GE              reduce using rule 76 (expression -> CHAR .)
    LE              reduce using rule 76 (expression -> CHAR .)
    EQ              reduce using rule 76 (expression -> CHAR .)
    NE              reduce using rule 76 (expression -> CHAR .)
    OR              reduce using rule 76 (expression -> CHAR .)
    SEMICOLON       reduce using rule 76 (expression -> CHAR .)
    ELSE            reduce using rule 76 (expression -> CHAR .)
    THEN            reduce using rule 76 (expression -> CHAR .)
    DO              reduce using rule 76 (expression -> CHAR .)
    RPAREN          reduce using rule 76 (expression -> CHAR .)
    COMMA           reduce using rule 76 (expression -> CHAR .)
    RBRACKET        reduce using rule 76 (expression -> CHAR .)
    TO              reduce using rule 76 (expression -> CHAR .)
    DOWNTO          reduce using rule 76 (expression -> CHAR .)


state 74

    (77) expression -> ID .
    (78) expression -> ID . LBRACKET expression RBRACKET
    (79) expression -> ID . LPAREN expression_list RPAREN
    (80) expression -> ID . LPAREN RPAREN

    PLUS            reduce using rule 77 (expression -> ID .)
    MINUS           reduce using rule 77 (expression -> ID .)
    TIMES           reduce using rule 77 (expression -> ID .)
    DIV             reduce using rule 77 (expression -> ID .)
    MOD             reduce using rule 77 (expression -> ID .)
    AND             reduce using rule 77 (expression -> ID .)
    GT              reduce using rule 77 (expression -> ID .)
    LT              reduce using rule 77 (expression -> ID .)
    GE              reduce using rule 77 (expression -> ID .)
    LE              reduce using rule 77 (expression -> ID .)
    EQ              reduce using rule 77 (expression -> ID .)
    NE              reduce using rule 77 (expression -> ID .)
    OR              reduce using rule 77 (expression -> ID .)
    SEMICOLON       reduce using rule 77 (expression -> ID .)
    ELSE            reduce using rule 77 (expression -> ID .)
    THEN            reduce using rule 77 (expression -> ID .)
    DO              reduce using rule 77 (expression -> ID .)
    RPAREN          reduce using rule 77 (expression -> ID .)
    COMMA           reduce using rule 77 (expression -> ID .)
    RBRACKET        reduce using rule 77 (expression -> ID .)
    TO              reduce using rule 77 (expression -> ID .)
    DOWNTO          reduce using rule 77 (expression -> ID .)
    LBRACKET        shift and go to state 112
    LPAREN          shift and go to state 113


state 75

    (89) expression -> LPAREN . expression RPAREN
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    RPAREN          reduce using rule 84 (expression -> .)
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 114

state 76

    (83) expression -> NOT . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 115

state 77

    (85) expression -> ORDFUNC . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 116

state 78

    (86) expression -> PREDFUNC . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 117

state 79

    (87) expression -> SUCCFUNC . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 118

state 80

    (88) expression -> LENGTHFUNC . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 119

state 81

    (45) simple_statement -> READFUNCLN expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    SEMICOLON       reduce using rule 45 (simple_statement -> READFUNCLN expression .)
    ELSE            reduce using rule 45 (simple_statement -> READFUNCLN expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 82

    (48) selection_statement -> IF expression . THEN statement
    (49) selection_statement -> IF expression . THEN inside_statement ELSE statement
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    THEN            shift and go to state 120
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 83

    (57) while_statement -> WHILE expression . DO statement
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    DO              shift and go to state 121
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 84

    (55) for_statement -> FOR ID . ASSIGN expression TO expression DO statement
    (56) for_statement -> FOR ID . ASSIGN expression DOWNTO expression DO statement

    ASSIGN          shift and go to state 122


state 85

    (3) program_body -> const_decls func_decls var_decl begin_progr .

    $end            reduce using rule 3 (program_body -> const_decls func_decls var_decl begin_progr .)


state 86

    (14) const_decl -> ID EQ expression . SEMICOLON
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    SEMICOLON       shift and go to state 123
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 87

    (23) var_decl_line -> id_list COLON type . SEMICOLON
    (24) var_decl_line -> id_list COLON type .

    SEMICOLON       shift and go to state 124
    ID              reduce using rule 24 (var_decl_line -> id_list COLON type .)
    BEGIN           reduce using rule 24 (var_decl_line -> id_list COLON type .)
    RPAREN          reduce using rule 24 (var_decl_line -> id_list COLON type .)


state 88

    (27) type -> INTEGERTYPE .

    SEMICOLON       reduce using rule 27 (type -> INTEGERTYPE .)
    ID              reduce using rule 27 (type -> INTEGERTYPE .)
    BEGIN           reduce using rule 27 (type -> INTEGERTYPE .)
    RPAREN          reduce using rule 27 (type -> INTEGERTYPE .)


state 89

    (28) type -> FLOATTYPE .

    SEMICOLON       reduce using rule 28 (type -> FLOATTYPE .)
    ID              reduce using rule 28 (type -> FLOATTYPE .)
    BEGIN           reduce using rule 28 (type -> FLOATTYPE .)
    RPAREN          reduce using rule 28 (type -> FLOATTYPE .)


state 90

    (29) type -> BOOLEANTYPE .

    SEMICOLON       reduce using rule 29 (type -> BOOLEANTYPE .)
    ID              reduce using rule 29 (type -> BOOLEANTYPE .)
    BEGIN           reduce using rule 29 (type -> BOOLEANTYPE .)
    RPAREN          reduce using rule 29 (type -> BOOLEANTYPE .)


state 91

    (30) type -> STRINGTYPE .

    SEMICOLON       reduce using rule 30 (type -> STRINGTYPE .)
    ID              reduce using rule 30 (type -> STRINGTYPE .)
    BEGIN           reduce using rule 30 (type -> STRINGTYPE .)
    RPAREN          reduce using rule 30 (type -> STRINGTYPE .)


state 92

    (31) type -> ARRAY . LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type

    LBRACKET        shift and go to state 125


state 93

    (26) id_list -> id_list COMMA ID .

    COLON           reduce using rule 26 (id_list -> id_list COMMA ID .)
    COMMA           reduce using rule 26 (id_list -> id_list COMMA ID .)


state 94

    (17) func_decl -> FUNCTION ID LPAREN var_decl_lines . RPAREN COLON type SEMICOLON begin_func
    (22) var_decl_lines -> var_decl_lines . var_decl_line
    (23) var_decl_line -> . id_list COLON type SEMICOLON
    (24) var_decl_line -> . id_list COLON type
    (25) id_list -> . ID
    (26) id_list -> . id_list COMMA ID

    RPAREN          shift and go to state 126
    ID              shift and go to state 30

    var_decl_line                  shift and go to state 56
    id_list                        shift and go to state 29

state 95

    (41) simple_statement -> ID ASSIGN expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    SEMICOLON       reduce using rule 41 (simple_statement -> ID ASSIGN expression .)
    ELSE            reduce using rule 41 (simple_statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 96

    (42) simple_statement -> WRITEFUNC LPAREN expression_list . RPAREN
    (82) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 127
    COMMA           shift and go to state 128


state 97

    (81) expression_list -> expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    RPAREN          reduce using rule 81 (expression_list -> expression .)
    COMMA           reduce using rule 81 (expression_list -> expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 98

    (43) simple_statement -> WRITEFUNCLN LPAREN expression_list . RPAREN
    (82) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 129
    COMMA           shift and go to state 128


state 99

    (58) expression -> expression PLUS . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 130

state 100

    (59) expression -> expression MINUS . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 131

state 101

    (60) expression -> expression TIMES . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 132

state 102

    (61) expression -> expression DIV . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 133

state 103

    (62) expression -> expression MOD . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 134

state 104

    (63) expression -> expression AND . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 135

state 105

    (64) expression -> expression GT . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 136

state 106

    (65) expression -> expression LT . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 137

state 107

    (66) expression -> expression GE . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 138

state 108

    (67) expression -> expression LE . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 139

state 109

    (68) expression -> expression EQ . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 140

state 110

    (69) expression -> expression NE . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 141

state 111

    (70) expression -> expression OR . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    SEMICOLON       reduce using rule 84 (expression -> .)
    ELSE            reduce using rule 84 (expression -> .)
    THEN            reduce using rule 84 (expression -> .)
    DO              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    RBRACKET        reduce using rule 84 (expression -> .)
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 142

state 112

    (78) expression -> ID LBRACKET . expression RBRACKET
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    RBRACKET        reduce using rule 84 (expression -> .)
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 143

state 113

    (79) expression -> ID LPAREN . expression_list RPAREN
    (80) expression -> ID LPAREN . RPAREN
    (81) expression_list -> . expression
    (82) expression_list -> . expression_list COMMA expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 145
    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

  ! RPAREN          [ reduce using rule 84 (expression -> .) ]

    expression_list                shift and go to state 144
    expression                     shift and go to state 97

state 114

    (89) expression -> LPAREN expression . RPAREN
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    RPAREN          shift and go to state 146
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 115

    (83) expression -> NOT expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 83 (expression -> NOT expression .)
    ELSE            reduce using rule 83 (expression -> NOT expression .)
    THEN            reduce using rule 83 (expression -> NOT expression .)
    DO              reduce using rule 83 (expression -> NOT expression .)
    RPAREN          reduce using rule 83 (expression -> NOT expression .)
    COMMA           reduce using rule 83 (expression -> NOT expression .)
    RBRACKET        reduce using rule 83 (expression -> NOT expression .)
    TO              reduce using rule 83 (expression -> NOT expression .)
    DOWNTO          reduce using rule 83 (expression -> NOT expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 83 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 83 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 83 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 83 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 83 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 83 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 83 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 83 (expression -> NOT expression .) ]
  ! GE              [ reduce using rule 83 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 83 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 83 (expression -> NOT expression .) ]
  ! NE              [ reduce using rule 83 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 83 (expression -> NOT expression .) ]


state 116

    (85) expression -> ORDFUNC expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 85 (expression -> ORDFUNC expression .)
    ELSE            reduce using rule 85 (expression -> ORDFUNC expression .)
    THEN            reduce using rule 85 (expression -> ORDFUNC expression .)
    DO              reduce using rule 85 (expression -> ORDFUNC expression .)
    RPAREN          reduce using rule 85 (expression -> ORDFUNC expression .)
    COMMA           reduce using rule 85 (expression -> ORDFUNC expression .)
    RBRACKET        reduce using rule 85 (expression -> ORDFUNC expression .)
    TO              reduce using rule 85 (expression -> ORDFUNC expression .)
    DOWNTO          reduce using rule 85 (expression -> ORDFUNC expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! MINUS           [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! TIMES           [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! DIV             [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! MOD             [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! AND             [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! GT              [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! LT              [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! GE              [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! LE              [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! EQ              [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! NE              [ reduce using rule 85 (expression -> ORDFUNC expression .) ]
  ! OR              [ reduce using rule 85 (expression -> ORDFUNC expression .) ]


state 117

    (86) expression -> PREDFUNC expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 86 (expression -> PREDFUNC expression .)
    ELSE            reduce using rule 86 (expression -> PREDFUNC expression .)
    THEN            reduce using rule 86 (expression -> PREDFUNC expression .)
    DO              reduce using rule 86 (expression -> PREDFUNC expression .)
    RPAREN          reduce using rule 86 (expression -> PREDFUNC expression .)
    COMMA           reduce using rule 86 (expression -> PREDFUNC expression .)
    RBRACKET        reduce using rule 86 (expression -> PREDFUNC expression .)
    TO              reduce using rule 86 (expression -> PREDFUNC expression .)
    DOWNTO          reduce using rule 86 (expression -> PREDFUNC expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! MINUS           [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! TIMES           [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! DIV             [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! MOD             [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! AND             [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! GT              [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! LT              [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! GE              [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! LE              [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! EQ              [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! NE              [ reduce using rule 86 (expression -> PREDFUNC expression .) ]
  ! OR              [ reduce using rule 86 (expression -> PREDFUNC expression .) ]


state 118

    (87) expression -> SUCCFUNC expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 87 (expression -> SUCCFUNC expression .)
    ELSE            reduce using rule 87 (expression -> SUCCFUNC expression .)
    THEN            reduce using rule 87 (expression -> SUCCFUNC expression .)
    DO              reduce using rule 87 (expression -> SUCCFUNC expression .)
    RPAREN          reduce using rule 87 (expression -> SUCCFUNC expression .)
    COMMA           reduce using rule 87 (expression -> SUCCFUNC expression .)
    RBRACKET        reduce using rule 87 (expression -> SUCCFUNC expression .)
    TO              reduce using rule 87 (expression -> SUCCFUNC expression .)
    DOWNTO          reduce using rule 87 (expression -> SUCCFUNC expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! MINUS           [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! TIMES           [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! DIV             [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! MOD             [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! AND             [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! GT              [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! LT              [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! GE              [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! LE              [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! EQ              [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! NE              [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]
  ! OR              [ reduce using rule 87 (expression -> SUCCFUNC expression .) ]


state 119

    (88) expression -> LENGTHFUNC expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 88 (expression -> LENGTHFUNC expression .)
    ELSE            reduce using rule 88 (expression -> LENGTHFUNC expression .)
    THEN            reduce using rule 88 (expression -> LENGTHFUNC expression .)
    DO              reduce using rule 88 (expression -> LENGTHFUNC expression .)
    RPAREN          reduce using rule 88 (expression -> LENGTHFUNC expression .)
    COMMA           reduce using rule 88 (expression -> LENGTHFUNC expression .)
    RBRACKET        reduce using rule 88 (expression -> LENGTHFUNC expression .)
    TO              reduce using rule 88 (expression -> LENGTHFUNC expression .)
    DOWNTO          reduce using rule 88 (expression -> LENGTHFUNC expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! MINUS           [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! TIMES           [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! DIV             [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! MOD             [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! AND             [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! GT              [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! LT              [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! GE              [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! LE              [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! EQ              [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! NE              [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]
  ! OR              [ reduce using rule 88 (expression -> LENGTHFUNC expression .) ]


state 120

    (48) selection_statement -> IF expression THEN . statement
    (49) selection_statement -> IF expression THEN . inside_statement ELSE statement
    (35) statement -> . COMMENT
    (36) statement -> . simple_statement SEMICOLON
    (37) statement -> . compound_statement SEMICOLON
    (38) statement -> . selection_statement
    (39) statement -> . while_statement
    (40) statement -> . for_statement
    (50) inside_statement -> . simple_statement
    (51) inside_statement -> . compound_statement
    (52) inside_statement -> . inside_selection_statement
    (41) simple_statement -> . ID ASSIGN expression
    (42) simple_statement -> . WRITEFUNC LPAREN expression_list RPAREN
    (43) simple_statement -> . WRITEFUNCLN LPAREN expression_list RPAREN
    (44) simple_statement -> . READFUNC expression
    (45) simple_statement -> . READFUNCLN expression
    (46) simple_statement -> . BREAK
    (47) compound_statement -> . BEGIN statement_list END
    (48) selection_statement -> . IF expression THEN statement
    (49) selection_statement -> . IF expression THEN inside_statement ELSE statement
    (57) while_statement -> . WHILE expression DO statement
    (55) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (53) inside_selection_statement -> . IF expression THEN inside_statement
    (54) inside_selection_statement -> . IF expression THEN inside_statement ELSE inside_statement

    COMMENT         shift and go to state 35
    ID              shift and go to state 41
    WRITEFUNC       shift and go to state 42
    WRITEFUNCLN     shift and go to state 43
    READFUNC        shift and go to state 44
    READFUNCLN      shift and go to state 45
    BREAK           shift and go to state 46
    BEGIN           shift and go to state 16
    IF              shift and go to state 147
    WHILE           shift and go to state 48
    FOR             shift and go to state 49

    statement                      shift and go to state 148
    inside_statement               shift and go to state 149
    simple_statement               shift and go to state 150
    compound_statement             shift and go to state 151
    selection_statement            shift and go to state 38
    while_statement                shift and go to state 39
    for_statement                  shift and go to state 40
    inside_selection_statement     shift and go to state 152

state 121

    (57) while_statement -> WHILE expression DO . statement
    (35) statement -> . COMMENT
    (36) statement -> . simple_statement SEMICOLON
    (37) statement -> . compound_statement SEMICOLON
    (38) statement -> . selection_statement
    (39) statement -> . while_statement
    (40) statement -> . for_statement
    (41) simple_statement -> . ID ASSIGN expression
    (42) simple_statement -> . WRITEFUNC LPAREN expression_list RPAREN
    (43) simple_statement -> . WRITEFUNCLN LPAREN expression_list RPAREN
    (44) simple_statement -> . READFUNC expression
    (45) simple_statement -> . READFUNCLN expression
    (46) simple_statement -> . BREAK
    (47) compound_statement -> . BEGIN statement_list END
    (48) selection_statement -> . IF expression THEN statement
    (49) selection_statement -> . IF expression THEN inside_statement ELSE statement
    (57) while_statement -> . WHILE expression DO statement
    (55) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement

    COMMENT         shift and go to state 35
    ID              shift and go to state 41
    WRITEFUNC       shift and go to state 42
    WRITEFUNCLN     shift and go to state 43
    READFUNC        shift and go to state 44
    READFUNCLN      shift and go to state 45
    BREAK           shift and go to state 46
    BEGIN           shift and go to state 16
    IF              shift and go to state 47
    WHILE           shift and go to state 48
    FOR             shift and go to state 49

    statement                      shift and go to state 153
    simple_statement               shift and go to state 36
    compound_statement             shift and go to state 37
    selection_statement            shift and go to state 38
    while_statement                shift and go to state 39
    for_statement                  shift and go to state 40

state 122

    (55) for_statement -> FOR ID ASSIGN . expression TO expression DO statement
    (56) for_statement -> FOR ID ASSIGN . expression DOWNTO expression DO statement
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    TO              reduce using rule 84 (expression -> .)
    DOWNTO          reduce using rule 84 (expression -> .)
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 154

state 123

    (14) const_decl -> ID EQ expression SEMICOLON .

    ID              reduce using rule 14 (const_decl -> ID EQ expression SEMICOLON .)
    VAR             reduce using rule 14 (const_decl -> ID EQ expression SEMICOLON .)
    FUNCTION        reduce using rule 14 (const_decl -> ID EQ expression SEMICOLON .)
    BEGIN           reduce using rule 14 (const_decl -> ID EQ expression SEMICOLON .)


state 124

    (23) var_decl_line -> id_list COLON type SEMICOLON .

    ID              reduce using rule 23 (var_decl_line -> id_list COLON type SEMICOLON .)
    BEGIN           reduce using rule 23 (var_decl_line -> id_list COLON type SEMICOLON .)
    RPAREN          reduce using rule 23 (var_decl_line -> id_list COLON type SEMICOLON .)


state 125

    (31) type -> ARRAY LBRACKET . NUMBER DOTDOT NUMBER RBRACKET OF type

    NUMBER          shift and go to state 155


state 126

    (17) func_decl -> FUNCTION ID LPAREN var_decl_lines RPAREN . COLON type SEMICOLON begin_func

    COLON           shift and go to state 156


state 127

    (42) simple_statement -> WRITEFUNC LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 42 (simple_statement -> WRITEFUNC LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 42 (simple_statement -> WRITEFUNC LPAREN expression_list RPAREN .)


state 128

    (82) expression_list -> expression_list COMMA . expression
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    RPAREN          reduce using rule 84 (expression -> .)
    COMMA           reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 157

state 129

    (43) simple_statement -> WRITEFUNCLN LPAREN expression_list RPAREN .

    SEMICOLON       reduce using rule 43 (simple_statement -> WRITEFUNCLN LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 43 (simple_statement -> WRITEFUNCLN LPAREN expression_list RPAREN .)


state 130

    (58) expression -> expression PLUS expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 58 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 58 (expression -> expression PLUS expression .)
    THEN            reduce using rule 58 (expression -> expression PLUS expression .)
    DO              reduce using rule 58 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 58 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 58 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 58 (expression -> expression PLUS expression .)
    TO              reduce using rule 58 (expression -> expression PLUS expression .)
    DOWNTO          reduce using rule 58 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! NE              [ reduce using rule 58 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 58 (expression -> expression PLUS expression .) ]


state 131

    (59) expression -> expression MINUS expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 59 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 59 (expression -> expression MINUS expression .)
    THEN            reduce using rule 59 (expression -> expression MINUS expression .)
    DO              reduce using rule 59 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 59 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 59 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 59 (expression -> expression MINUS expression .)
    TO              reduce using rule 59 (expression -> expression MINUS expression .)
    DOWNTO          reduce using rule 59 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! NE              [ reduce using rule 59 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 59 (expression -> expression MINUS expression .) ]


state 132

    (60) expression -> expression TIMES expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 60 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 60 (expression -> expression TIMES expression .)
    THEN            reduce using rule 60 (expression -> expression TIMES expression .)
    DO              reduce using rule 60 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 60 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 60 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 60 (expression -> expression TIMES expression .)
    TO              reduce using rule 60 (expression -> expression TIMES expression .)
    DOWNTO          reduce using rule 60 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! DIV             [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! MOD             [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! EQ              [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! NE              [ reduce using rule 60 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 60 (expression -> expression TIMES expression .) ]


state 133

    (61) expression -> expression DIV expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 61 (expression -> expression DIV expression .)
    ELSE            reduce using rule 61 (expression -> expression DIV expression .)
    THEN            reduce using rule 61 (expression -> expression DIV expression .)
    DO              reduce using rule 61 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 61 (expression -> expression DIV expression .)
    COMMA           reduce using rule 61 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 61 (expression -> expression DIV expression .)
    TO              reduce using rule 61 (expression -> expression DIV expression .)
    DOWNTO          reduce using rule 61 (expression -> expression DIV expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! MOD             [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! AND             [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! GT              [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! LT              [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! GE              [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! LE              [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! EQ              [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! NE              [ reduce using rule 61 (expression -> expression DIV expression .) ]
  ! OR              [ reduce using rule 61 (expression -> expression DIV expression .) ]


state 134

    (62) expression -> expression MOD expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 62 (expression -> expression MOD expression .)
    ELSE            reduce using rule 62 (expression -> expression MOD expression .)
    THEN            reduce using rule 62 (expression -> expression MOD expression .)
    DO              reduce using rule 62 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 62 (expression -> expression MOD expression .)
    COMMA           reduce using rule 62 (expression -> expression MOD expression .)
    RBRACKET        reduce using rule 62 (expression -> expression MOD expression .)
    TO              reduce using rule 62 (expression -> expression MOD expression .)
    DOWNTO          reduce using rule 62 (expression -> expression MOD expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! TIMES           [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! DIV             [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! AND             [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! GT              [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! LT              [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! GE              [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! LE              [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! EQ              [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! NE              [ reduce using rule 62 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 62 (expression -> expression MOD expression .) ]


state 135

    (63) expression -> expression AND expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 63 (expression -> expression AND expression .)
    ELSE            reduce using rule 63 (expression -> expression AND expression .)
    THEN            reduce using rule 63 (expression -> expression AND expression .)
    DO              reduce using rule 63 (expression -> expression AND expression .)
    RPAREN          reduce using rule 63 (expression -> expression AND expression .)
    COMMA           reduce using rule 63 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 63 (expression -> expression AND expression .)
    TO              reduce using rule 63 (expression -> expression AND expression .)
    DOWNTO          reduce using rule 63 (expression -> expression AND expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! NE              [ reduce using rule 63 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 63 (expression -> expression AND expression .) ]


state 136

    (64) expression -> expression GT expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 64 (expression -> expression GT expression .)
    ELSE            reduce using rule 64 (expression -> expression GT expression .)
    THEN            reduce using rule 64 (expression -> expression GT expression .)
    DO              reduce using rule 64 (expression -> expression GT expression .)
    RPAREN          reduce using rule 64 (expression -> expression GT expression .)
    COMMA           reduce using rule 64 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 64 (expression -> expression GT expression .)
    TO              reduce using rule 64 (expression -> expression GT expression .)
    DOWNTO          reduce using rule 64 (expression -> expression GT expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! MOD             [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 64 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 64 (expression -> expression GT expression .) ]


state 137

    (65) expression -> expression LT expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 65 (expression -> expression LT expression .)
    ELSE            reduce using rule 65 (expression -> expression LT expression .)
    THEN            reduce using rule 65 (expression -> expression LT expression .)
    DO              reduce using rule 65 (expression -> expression LT expression .)
    RPAREN          reduce using rule 65 (expression -> expression LT expression .)
    COMMA           reduce using rule 65 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 65 (expression -> expression LT expression .)
    TO              reduce using rule 65 (expression -> expression LT expression .)
    DOWNTO          reduce using rule 65 (expression -> expression LT expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! MOD             [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 65 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 65 (expression -> expression LT expression .) ]


state 138

    (66) expression -> expression GE expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 66 (expression -> expression GE expression .)
    ELSE            reduce using rule 66 (expression -> expression GE expression .)
    THEN            reduce using rule 66 (expression -> expression GE expression .)
    DO              reduce using rule 66 (expression -> expression GE expression .)
    RPAREN          reduce using rule 66 (expression -> expression GE expression .)
    COMMA           reduce using rule 66 (expression -> expression GE expression .)
    RBRACKET        reduce using rule 66 (expression -> expression GE expression .)
    TO              reduce using rule 66 (expression -> expression GE expression .)
    DOWNTO          reduce using rule 66 (expression -> expression GE expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! MOD             [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! AND             [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! NE              [ reduce using rule 66 (expression -> expression GE expression .) ]
  ! OR              [ reduce using rule 66 (expression -> expression GE expression .) ]


state 139

    (67) expression -> expression LE expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 67 (expression -> expression LE expression .)
    ELSE            reduce using rule 67 (expression -> expression LE expression .)
    THEN            reduce using rule 67 (expression -> expression LE expression .)
    DO              reduce using rule 67 (expression -> expression LE expression .)
    RPAREN          reduce using rule 67 (expression -> expression LE expression .)
    COMMA           reduce using rule 67 (expression -> expression LE expression .)
    RBRACKET        reduce using rule 67 (expression -> expression LE expression .)
    TO              reduce using rule 67 (expression -> expression LE expression .)
    DOWNTO          reduce using rule 67 (expression -> expression LE expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! MOD             [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! AND             [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! NE              [ reduce using rule 67 (expression -> expression LE expression .) ]
  ! OR              [ reduce using rule 67 (expression -> expression LE expression .) ]


state 140

    (68) expression -> expression EQ expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 68 (expression -> expression EQ expression .)
    ELSE            reduce using rule 68 (expression -> expression EQ expression .)
    THEN            reduce using rule 68 (expression -> expression EQ expression .)
    DO              reduce using rule 68 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 68 (expression -> expression EQ expression .)
    COMMA           reduce using rule 68 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 68 (expression -> expression EQ expression .)
    TO              reduce using rule 68 (expression -> expression EQ expression .)
    DOWNTO          reduce using rule 68 (expression -> expression EQ expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! MOD             [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 68 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 68 (expression -> expression EQ expression .) ]


state 141

    (69) expression -> expression NE expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 69 (expression -> expression NE expression .)
    ELSE            reduce using rule 69 (expression -> expression NE expression .)
    THEN            reduce using rule 69 (expression -> expression NE expression .)
    DO              reduce using rule 69 (expression -> expression NE expression .)
    RPAREN          reduce using rule 69 (expression -> expression NE expression .)
    COMMA           reduce using rule 69 (expression -> expression NE expression .)
    RBRACKET        reduce using rule 69 (expression -> expression NE expression .)
    TO              reduce using rule 69 (expression -> expression NE expression .)
    DOWNTO          reduce using rule 69 (expression -> expression NE expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! DIV             [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! MOD             [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! AND             [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 69 (expression -> expression NE expression .) ]
  ! OR              [ reduce using rule 69 (expression -> expression NE expression .) ]


state 142

    (70) expression -> expression OR expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 70 (expression -> expression OR expression .)
    ELSE            reduce using rule 70 (expression -> expression OR expression .)
    THEN            reduce using rule 70 (expression -> expression OR expression .)
    DO              reduce using rule 70 (expression -> expression OR expression .)
    RPAREN          reduce using rule 70 (expression -> expression OR expression .)
    COMMA           reduce using rule 70 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 70 (expression -> expression OR expression .)
    TO              reduce using rule 70 (expression -> expression OR expression .)
    DOWNTO          reduce using rule 70 (expression -> expression OR expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111

  ! PLUS            [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! DIV             [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! NE              [ reduce using rule 70 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 70 (expression -> expression OR expression .) ]


state 143

    (78) expression -> ID LBRACKET expression . RBRACKET
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    RBRACKET        shift and go to state 158
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 144

    (79) expression -> ID LPAREN expression_list . RPAREN
    (82) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 159
    COMMA           shift and go to state 128


state 145

    (80) expression -> ID LPAREN RPAREN .

    PLUS            reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    DIV             reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    MOD             reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    AND             reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    GT              reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    LT              reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    GE              reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    LE              reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    EQ              reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    NE              reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    OR              reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    THEN            reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    DO              reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    TO              reduce using rule 80 (expression -> ID LPAREN RPAREN .)
    DOWNTO          reduce using rule 80 (expression -> ID LPAREN RPAREN .)


state 146

    (89) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    NE              reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    TO              reduce using rule 89 (expression -> LPAREN expression RPAREN .)
    DOWNTO          reduce using rule 89 (expression -> LPAREN expression RPAREN .)


state 147

    (48) selection_statement -> IF . expression THEN statement
    (49) selection_statement -> IF . expression THEN inside_statement ELSE statement
    (53) inside_selection_statement -> IF . expression THEN inside_statement
    (54) inside_selection_statement -> IF . expression THEN inside_statement ELSE inside_statement
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    THEN            reduce using rule 84 (expression -> .)
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 160

state 148

    (48) selection_statement -> IF expression THEN statement .

    END             reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    COMMENT         reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    ID              reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    WRITEFUNC       reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    WRITEFUNCLN     reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    READFUNC        reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    READFUNCLN      reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    BREAK           reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    BEGIN           reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    IF              reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    WHILE           reduce using rule 48 (selection_statement -> IF expression THEN statement .)
    FOR             reduce using rule 48 (selection_statement -> IF expression THEN statement .)


state 149

    (49) selection_statement -> IF expression THEN inside_statement . ELSE statement

    ELSE            shift and go to state 161


state 150

    (36) statement -> simple_statement . SEMICOLON
    (50) inside_statement -> simple_statement .

    SEMICOLON       shift and go to state 62
    ELSE            reduce using rule 50 (inside_statement -> simple_statement .)


state 151

    (37) statement -> compound_statement . SEMICOLON
    (51) inside_statement -> compound_statement .

    SEMICOLON       shift and go to state 63
    ELSE            reduce using rule 51 (inside_statement -> compound_statement .)


state 152

    (52) inside_statement -> inside_selection_statement .

    ELSE            reduce using rule 52 (inside_statement -> inside_selection_statement .)


state 153

    (57) while_statement -> WHILE expression DO statement .

    END             reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    COMMENT         reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    ID              reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    WRITEFUNC       reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    WRITEFUNCLN     reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    READFUNC        reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    READFUNCLN      reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    BREAK           reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    BEGIN           reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    IF              reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    WHILE           reduce using rule 57 (while_statement -> WHILE expression DO statement .)
    FOR             reduce using rule 57 (while_statement -> WHILE expression DO statement .)


state 154

    (55) for_statement -> FOR ID ASSIGN expression . TO expression DO statement
    (56) for_statement -> FOR ID ASSIGN expression . DOWNTO expression DO statement
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    TO              shift and go to state 162
    DOWNTO          shift and go to state 163
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 155

    (31) type -> ARRAY LBRACKET NUMBER . DOTDOT NUMBER RBRACKET OF type

    DOTDOT          shift and go to state 164


state 156

    (17) func_decl -> FUNCTION ID LPAREN var_decl_lines RPAREN COLON . type SEMICOLON begin_func
    (27) type -> . INTEGERTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . BOOLEANTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type

    INTEGERTYPE     shift and go to state 88
    FLOATTYPE       shift and go to state 89
    BOOLEANTYPE     shift and go to state 90
    STRINGTYPE      shift and go to state 91
    ARRAY           shift and go to state 92

    type                           shift and go to state 165

state 157

    (82) expression_list -> expression_list COMMA expression .
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    RPAREN          reduce using rule 82 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 82 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 158

    (78) expression -> ID LBRACKET expression RBRACKET .

    PLUS            reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    DIV             reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    MOD             reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    GE              reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    LE              reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    NE              reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    THEN            reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    DO              reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    TO              reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)
    DOWNTO          reduce using rule 78 (expression -> ID LBRACKET expression RBRACKET .)


state 159

    (79) expression -> ID LPAREN expression_list RPAREN .

    PLUS            reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    DIV             reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    MOD             reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    AND             reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    GT              reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    LT              reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    GE              reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    LE              reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    EQ              reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    NE              reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    OR              reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    THEN            reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    DO              reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    RBRACKET        reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    TO              reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)
    DOWNTO          reduce using rule 79 (expression -> ID LPAREN expression_list RPAREN .)


state 160

    (48) selection_statement -> IF expression . THEN statement
    (49) selection_statement -> IF expression . THEN inside_statement ELSE statement
    (53) inside_selection_statement -> IF expression . THEN inside_statement
    (54) inside_selection_statement -> IF expression . THEN inside_statement ELSE inside_statement
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    THEN            shift and go to state 166
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 161

    (49) selection_statement -> IF expression THEN inside_statement ELSE . statement
    (35) statement -> . COMMENT
    (36) statement -> . simple_statement SEMICOLON
    (37) statement -> . compound_statement SEMICOLON
    (38) statement -> . selection_statement
    (39) statement -> . while_statement
    (40) statement -> . for_statement
    (41) simple_statement -> . ID ASSIGN expression
    (42) simple_statement -> . WRITEFUNC LPAREN expression_list RPAREN
    (43) simple_statement -> . WRITEFUNCLN LPAREN expression_list RPAREN
    (44) simple_statement -> . READFUNC expression
    (45) simple_statement -> . READFUNCLN expression
    (46) simple_statement -> . BREAK
    (47) compound_statement -> . BEGIN statement_list END
    (48) selection_statement -> . IF expression THEN statement
    (49) selection_statement -> . IF expression THEN inside_statement ELSE statement
    (57) while_statement -> . WHILE expression DO statement
    (55) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement

    COMMENT         shift and go to state 35
    ID              shift and go to state 41
    WRITEFUNC       shift and go to state 42
    WRITEFUNCLN     shift and go to state 43
    READFUNC        shift and go to state 44
    READFUNCLN      shift and go to state 45
    BREAK           shift and go to state 46
    BEGIN           shift and go to state 16
    IF              shift and go to state 47
    WHILE           shift and go to state 48
    FOR             shift and go to state 49

    statement                      shift and go to state 167
    simple_statement               shift and go to state 36
    compound_statement             shift and go to state 37
    selection_statement            shift and go to state 38
    while_statement                shift and go to state 39
    for_statement                  shift and go to state 40

state 162

    (55) for_statement -> FOR ID ASSIGN expression TO . expression DO statement
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    DO              reduce using rule 84 (expression -> .)
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 168

state 163

    (56) for_statement -> FOR ID ASSIGN expression DOWNTO . expression DO statement
    (58) expression -> . expression PLUS expression
    (59) expression -> . expression MINUS expression
    (60) expression -> . expression TIMES expression
    (61) expression -> . expression DIV expression
    (62) expression -> . expression MOD expression
    (63) expression -> . expression AND expression
    (64) expression -> . expression GT expression
    (65) expression -> . expression LT expression
    (66) expression -> . expression GE expression
    (67) expression -> . expression LE expression
    (68) expression -> . expression EQ expression
    (69) expression -> . expression NE expression
    (70) expression -> . expression OR expression
    (71) expression -> . STRING
    (72) expression -> . NUMBER
    (73) expression -> . FLOAT
    (74) expression -> . FALSE
    (75) expression -> . TRUE
    (76) expression -> . CHAR
    (77) expression -> . ID
    (78) expression -> . ID LBRACKET expression RBRACKET
    (79) expression -> . ID LPAREN expression_list RPAREN
    (80) expression -> . ID LPAREN RPAREN
    (83) expression -> . NOT expression
    (84) expression -> .
    (85) expression -> . ORDFUNC expression
    (86) expression -> . PREDFUNC expression
    (87) expression -> . SUCCFUNC expression
    (88) expression -> . LENGTHFUNC expression
    (89) expression -> . LPAREN expression RPAREN

    STRING          shift and go to state 68
    NUMBER          shift and go to state 69
    FLOAT           shift and go to state 70
    FALSE           shift and go to state 71
    TRUE            shift and go to state 72
    CHAR            shift and go to state 73
    ID              shift and go to state 74
    NOT             shift and go to state 76
    DO              reduce using rule 84 (expression -> .)
    PLUS            reduce using rule 84 (expression -> .)
    MINUS           reduce using rule 84 (expression -> .)
    TIMES           reduce using rule 84 (expression -> .)
    DIV             reduce using rule 84 (expression -> .)
    MOD             reduce using rule 84 (expression -> .)
    AND             reduce using rule 84 (expression -> .)
    GT              reduce using rule 84 (expression -> .)
    LT              reduce using rule 84 (expression -> .)
    GE              reduce using rule 84 (expression -> .)
    LE              reduce using rule 84 (expression -> .)
    EQ              reduce using rule 84 (expression -> .)
    NE              reduce using rule 84 (expression -> .)
    OR              reduce using rule 84 (expression -> .)
    ORDFUNC         shift and go to state 77
    PREDFUNC        shift and go to state 78
    SUCCFUNC        shift and go to state 79
    LENGTHFUNC      shift and go to state 80
    LPAREN          shift and go to state 75

    expression                     shift and go to state 169

state 164

    (31) type -> ARRAY LBRACKET NUMBER DOTDOT . NUMBER RBRACKET OF type

    NUMBER          shift and go to state 170


state 165

    (17) func_decl -> FUNCTION ID LPAREN var_decl_lines RPAREN COLON type . SEMICOLON begin_func

    SEMICOLON       shift and go to state 171


state 166

    (48) selection_statement -> IF expression THEN . statement
    (49) selection_statement -> IF expression THEN . inside_statement ELSE statement
    (53) inside_selection_statement -> IF expression THEN . inside_statement
    (54) inside_selection_statement -> IF expression THEN . inside_statement ELSE inside_statement
    (35) statement -> . COMMENT
    (36) statement -> . simple_statement SEMICOLON
    (37) statement -> . compound_statement SEMICOLON
    (38) statement -> . selection_statement
    (39) statement -> . while_statement
    (40) statement -> . for_statement
    (50) inside_statement -> . simple_statement
    (51) inside_statement -> . compound_statement
    (52) inside_statement -> . inside_selection_statement
    (41) simple_statement -> . ID ASSIGN expression
    (42) simple_statement -> . WRITEFUNC LPAREN expression_list RPAREN
    (43) simple_statement -> . WRITEFUNCLN LPAREN expression_list RPAREN
    (44) simple_statement -> . READFUNC expression
    (45) simple_statement -> . READFUNCLN expression
    (46) simple_statement -> . BREAK
    (47) compound_statement -> . BEGIN statement_list END
    (48) selection_statement -> . IF expression THEN statement
    (49) selection_statement -> . IF expression THEN inside_statement ELSE statement
    (57) while_statement -> . WHILE expression DO statement
    (55) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (53) inside_selection_statement -> . IF expression THEN inside_statement
    (54) inside_selection_statement -> . IF expression THEN inside_statement ELSE inside_statement

    COMMENT         shift and go to state 35
    ID              shift and go to state 41
    WRITEFUNC       shift and go to state 42
    WRITEFUNCLN     shift and go to state 43
    READFUNC        shift and go to state 44
    READFUNCLN      shift and go to state 45
    BREAK           shift and go to state 46
    BEGIN           shift and go to state 16
    IF              shift and go to state 147
    WHILE           shift and go to state 48
    FOR             shift and go to state 49

    statement                      shift and go to state 148
    inside_statement               shift and go to state 172
    simple_statement               shift and go to state 150
    compound_statement             shift and go to state 151
    selection_statement            shift and go to state 38
    while_statement                shift and go to state 39
    for_statement                  shift and go to state 40
    inside_selection_statement     shift and go to state 152

state 167

    (49) selection_statement -> IF expression THEN inside_statement ELSE statement .

    END             reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    COMMENT         reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    ID              reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    WRITEFUNC       reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    WRITEFUNCLN     reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    READFUNC        reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    READFUNCLN      reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    BREAK           reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    BEGIN           reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    IF              reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    WHILE           reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)
    FOR             reduce using rule 49 (selection_statement -> IF expression THEN inside_statement ELSE statement .)


state 168

    (55) for_statement -> FOR ID ASSIGN expression TO expression . DO statement
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    DO              shift and go to state 173
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 169

    (56) for_statement -> FOR ID ASSIGN expression DOWNTO expression . DO statement
    (58) expression -> expression . PLUS expression
    (59) expression -> expression . MINUS expression
    (60) expression -> expression . TIMES expression
    (61) expression -> expression . DIV expression
    (62) expression -> expression . MOD expression
    (63) expression -> expression . AND expression
    (64) expression -> expression . GT expression
    (65) expression -> expression . LT expression
    (66) expression -> expression . GE expression
    (67) expression -> expression . LE expression
    (68) expression -> expression . EQ expression
    (69) expression -> expression . NE expression
    (70) expression -> expression . OR expression

    DO              shift and go to state 174
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100
    TIMES           shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 103
    AND             shift and go to state 104
    GT              shift and go to state 105
    LT              shift and go to state 106
    GE              shift and go to state 107
    LE              shift and go to state 108
    EQ              shift and go to state 109
    NE              shift and go to state 110
    OR              shift and go to state 111


state 170

    (31) type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER . RBRACKET OF type

    RBRACKET        shift and go to state 175


state 171

    (17) func_decl -> FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON . begin_func
    (18) begin_func -> . var_decl compound_statement SEMICOLON
    (19) begin_func -> . compound_statement SEMICOLON
    (20) var_decl -> . VAR var_decl_lines
    (47) compound_statement -> . BEGIN statement_list END

    VAR             shift and go to state 13
    BEGIN           shift and go to state 16

    begin_func                     shift and go to state 176
    var_decl                       shift and go to state 177
    compound_statement             shift and go to state 178

state 172

    (49) selection_statement -> IF expression THEN inside_statement . ELSE statement
    (53) inside_selection_statement -> IF expression THEN inside_statement .
    (54) inside_selection_statement -> IF expression THEN inside_statement . ELSE inside_statement

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 179

  ! ELSE            [ reduce using rule 53 (inside_selection_statement -> IF expression THEN inside_statement .) ]


state 173

    (55) for_statement -> FOR ID ASSIGN expression TO expression DO . statement
    (35) statement -> . COMMENT
    (36) statement -> . simple_statement SEMICOLON
    (37) statement -> . compound_statement SEMICOLON
    (38) statement -> . selection_statement
    (39) statement -> . while_statement
    (40) statement -> . for_statement
    (41) simple_statement -> . ID ASSIGN expression
    (42) simple_statement -> . WRITEFUNC LPAREN expression_list RPAREN
    (43) simple_statement -> . WRITEFUNCLN LPAREN expression_list RPAREN
    (44) simple_statement -> . READFUNC expression
    (45) simple_statement -> . READFUNCLN expression
    (46) simple_statement -> . BREAK
    (47) compound_statement -> . BEGIN statement_list END
    (48) selection_statement -> . IF expression THEN statement
    (49) selection_statement -> . IF expression THEN inside_statement ELSE statement
    (57) while_statement -> . WHILE expression DO statement
    (55) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement

    COMMENT         shift and go to state 35
    ID              shift and go to state 41
    WRITEFUNC       shift and go to state 42
    WRITEFUNCLN     shift and go to state 43
    READFUNC        shift and go to state 44
    READFUNCLN      shift and go to state 45
    BREAK           shift and go to state 46
    BEGIN           shift and go to state 16
    IF              shift and go to state 47
    WHILE           shift and go to state 48
    FOR             shift and go to state 49

    statement                      shift and go to state 180
    simple_statement               shift and go to state 36
    compound_statement             shift and go to state 37
    selection_statement            shift and go to state 38
    while_statement                shift and go to state 39
    for_statement                  shift and go to state 40

state 174

    (56) for_statement -> FOR ID ASSIGN expression DOWNTO expression DO . statement
    (35) statement -> . COMMENT
    (36) statement -> . simple_statement SEMICOLON
    (37) statement -> . compound_statement SEMICOLON
    (38) statement -> . selection_statement
    (39) statement -> . while_statement
    (40) statement -> . for_statement
    (41) simple_statement -> . ID ASSIGN expression
    (42) simple_statement -> . WRITEFUNC LPAREN expression_list RPAREN
    (43) simple_statement -> . WRITEFUNCLN LPAREN expression_list RPAREN
    (44) simple_statement -> . READFUNC expression
    (45) simple_statement -> . READFUNCLN expression
    (46) simple_statement -> . BREAK
    (47) compound_statement -> . BEGIN statement_list END
    (48) selection_statement -> . IF expression THEN statement
    (49) selection_statement -> . IF expression THEN inside_statement ELSE statement
    (57) while_statement -> . WHILE expression DO statement
    (55) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement

    COMMENT         shift and go to state 35
    ID              shift and go to state 41
    WRITEFUNC       shift and go to state 42
    WRITEFUNCLN     shift and go to state 43
    READFUNC        shift and go to state 44
    READFUNCLN      shift and go to state 45
    BREAK           shift and go to state 46
    BEGIN           shift and go to state 16
    IF              shift and go to state 47
    WHILE           shift and go to state 48
    FOR             shift and go to state 49

    statement                      shift and go to state 181
    simple_statement               shift and go to state 36
    compound_statement             shift and go to state 37
    selection_statement            shift and go to state 38
    while_statement                shift and go to state 39
    for_statement                  shift and go to state 40

state 175

    (31) type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET . OF type

    OF              shift and go to state 182


state 176

    (17) func_decl -> FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func .

    VAR             reduce using rule 17 (func_decl -> FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func .)
    FUNCTION        reduce using rule 17 (func_decl -> FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func .)
    BEGIN           reduce using rule 17 (func_decl -> FUNCTION ID LPAREN var_decl_lines RPAREN COLON type SEMICOLON begin_func .)


state 177

    (18) begin_func -> var_decl . compound_statement SEMICOLON
    (47) compound_statement -> . BEGIN statement_list END

    BEGIN           shift and go to state 16

    compound_statement             shift and go to state 183

state 178

    (19) begin_func -> compound_statement . SEMICOLON

    SEMICOLON       shift and go to state 184


state 179

    (49) selection_statement -> IF expression THEN inside_statement ELSE . statement
    (54) inside_selection_statement -> IF expression THEN inside_statement ELSE . inside_statement
    (35) statement -> . COMMENT
    (36) statement -> . simple_statement SEMICOLON
    (37) statement -> . compound_statement SEMICOLON
    (38) statement -> . selection_statement
    (39) statement -> . while_statement
    (40) statement -> . for_statement
    (50) inside_statement -> . simple_statement
    (51) inside_statement -> . compound_statement
    (52) inside_statement -> . inside_selection_statement
    (41) simple_statement -> . ID ASSIGN expression
    (42) simple_statement -> . WRITEFUNC LPAREN expression_list RPAREN
    (43) simple_statement -> . WRITEFUNCLN LPAREN expression_list RPAREN
    (44) simple_statement -> . READFUNC expression
    (45) simple_statement -> . READFUNCLN expression
    (46) simple_statement -> . BREAK
    (47) compound_statement -> . BEGIN statement_list END
    (48) selection_statement -> . IF expression THEN statement
    (49) selection_statement -> . IF expression THEN inside_statement ELSE statement
    (57) while_statement -> . WHILE expression DO statement
    (55) for_statement -> . FOR ID ASSIGN expression TO expression DO statement
    (56) for_statement -> . FOR ID ASSIGN expression DOWNTO expression DO statement
    (53) inside_selection_statement -> . IF expression THEN inside_statement
    (54) inside_selection_statement -> . IF expression THEN inside_statement ELSE inside_statement

    COMMENT         shift and go to state 35
    ID              shift and go to state 41
    WRITEFUNC       shift and go to state 42
    WRITEFUNCLN     shift and go to state 43
    READFUNC        shift and go to state 44
    READFUNCLN      shift and go to state 45
    BREAK           shift and go to state 46
    BEGIN           shift and go to state 16
    IF              shift and go to state 147
    WHILE           shift and go to state 48
    FOR             shift and go to state 49

    inside_statement               shift and go to state 185
    statement                      shift and go to state 167
    simple_statement               shift and go to state 150
    compound_statement             shift and go to state 151
    selection_statement            shift and go to state 38
    while_statement                shift and go to state 39
    for_statement                  shift and go to state 40
    inside_selection_statement     shift and go to state 152

state 180

    (55) for_statement -> FOR ID ASSIGN expression TO expression DO statement .

    END             reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    COMMENT         reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    ID              reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    WRITEFUNC       reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    WRITEFUNCLN     reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    READFUNC        reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    READFUNCLN      reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    BREAK           reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    BEGIN           reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    IF              reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    WHILE           reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)
    FOR             reduce using rule 55 (for_statement -> FOR ID ASSIGN expression TO expression DO statement .)


state 181

    (56) for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .

    END             reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    COMMENT         reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    ID              reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    WRITEFUNC       reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    WRITEFUNCLN     reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    READFUNC        reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    READFUNCLN      reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    BREAK           reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    BEGIN           reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    IF              reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    WHILE           reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)
    FOR             reduce using rule 56 (for_statement -> FOR ID ASSIGN expression DOWNTO expression DO statement .)


state 182

    (31) type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF . type
    (27) type -> . INTEGERTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . BOOLEANTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type

    INTEGERTYPE     shift and go to state 88
    FLOATTYPE       shift and go to state 89
    BOOLEANTYPE     shift and go to state 90
    STRINGTYPE      shift and go to state 91
    ARRAY           shift and go to state 92

    type                           shift and go to state 186

state 183

    (18) begin_func -> var_decl compound_statement . SEMICOLON

    SEMICOLON       shift and go to state 187


state 184

    (19) begin_func -> compound_statement SEMICOLON .

    VAR             reduce using rule 19 (begin_func -> compound_statement SEMICOLON .)
    FUNCTION        reduce using rule 19 (begin_func -> compound_statement SEMICOLON .)
    BEGIN           reduce using rule 19 (begin_func -> compound_statement SEMICOLON .)


state 185

    (54) inside_selection_statement -> IF expression THEN inside_statement ELSE inside_statement .

    ELSE            reduce using rule 54 (inside_selection_statement -> IF expression THEN inside_statement ELSE inside_statement .)


state 186

    (31) type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type .

    SEMICOLON       reduce using rule 31 (type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type .)
    ID              reduce using rule 31 (type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type .)
    BEGIN           reduce using rule 31 (type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type .)
    RPAREN          reduce using rule 31 (type -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF type .)


state 187

    (18) begin_func -> var_decl compound_statement SEMICOLON .

    VAR             reduce using rule 18 (begin_func -> var_decl compound_statement SEMICOLON .)
    FUNCTION        reduce using rule 18 (begin_func -> var_decl compound_statement SEMICOLON .)
    BEGIN           reduce using rule 18 (begin_func -> var_decl compound_statement SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 115 resolved as shift
WARNING: shift/reduce conflict for DIV in state 115 resolved as shift
WARNING: shift/reduce conflict for MOD in state 115 resolved as shift
WARNING: shift/reduce conflict for AND in state 115 resolved as shift
WARNING: shift/reduce conflict for GT in state 115 resolved as shift
WARNING: shift/reduce conflict for LT in state 115 resolved as shift
WARNING: shift/reduce conflict for GE in state 115 resolved as shift
WARNING: shift/reduce conflict for LE in state 115 resolved as shift
WARNING: shift/reduce conflict for EQ in state 115 resolved as shift
WARNING: shift/reduce conflict for NE in state 115 resolved as shift
WARNING: shift/reduce conflict for OR in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 116 resolved as shift
WARNING: shift/reduce conflict for DIV in state 116 resolved as shift
WARNING: shift/reduce conflict for MOD in state 116 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for GT in state 116 resolved as shift
WARNING: shift/reduce conflict for LT in state 116 resolved as shift
WARNING: shift/reduce conflict for GE in state 116 resolved as shift
WARNING: shift/reduce conflict for LE in state 116 resolved as shift
WARNING: shift/reduce conflict for EQ in state 116 resolved as shift
WARNING: shift/reduce conflict for NE in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 117 resolved as shift
WARNING: shift/reduce conflict for DIV in state 117 resolved as shift
WARNING: shift/reduce conflict for MOD in state 117 resolved as shift
WARNING: shift/reduce conflict for AND in state 117 resolved as shift
WARNING: shift/reduce conflict for GT in state 117 resolved as shift
WARNING: shift/reduce conflict for LT in state 117 resolved as shift
WARNING: shift/reduce conflict for GE in state 117 resolved as shift
WARNING: shift/reduce conflict for LE in state 117 resolved as shift
WARNING: shift/reduce conflict for EQ in state 117 resolved as shift
WARNING: shift/reduce conflict for NE in state 117 resolved as shift
WARNING: shift/reduce conflict for OR in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 118 resolved as shift
WARNING: shift/reduce conflict for DIV in state 118 resolved as shift
WARNING: shift/reduce conflict for MOD in state 118 resolved as shift
WARNING: shift/reduce conflict for AND in state 118 resolved as shift
WARNING: shift/reduce conflict for GT in state 118 resolved as shift
WARNING: shift/reduce conflict for LT in state 118 resolved as shift
WARNING: shift/reduce conflict for GE in state 118 resolved as shift
WARNING: shift/reduce conflict for LE in state 118 resolved as shift
WARNING: shift/reduce conflict for EQ in state 118 resolved as shift
WARNING: shift/reduce conflict for NE in state 118 resolved as shift
WARNING: shift/reduce conflict for OR in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 119 resolved as shift
WARNING: shift/reduce conflict for DIV in state 119 resolved as shift
WARNING: shift/reduce conflict for MOD in state 119 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for GT in state 119 resolved as shift
WARNING: shift/reduce conflict for LT in state 119 resolved as shift
WARNING: shift/reduce conflict for GE in state 119 resolved as shift
WARNING: shift/reduce conflict for LE in state 119 resolved as shift
WARNING: shift/reduce conflict for EQ in state 119 resolved as shift
WARNING: shift/reduce conflict for NE in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 130 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 130 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 130 resolved as shift
WARNING: shift/reduce conflict for DIV in state 130 resolved as shift
WARNING: shift/reduce conflict for MOD in state 130 resolved as shift
WARNING: shift/reduce conflict for AND in state 130 resolved as shift
WARNING: shift/reduce conflict for GT in state 130 resolved as shift
WARNING: shift/reduce conflict for LT in state 130 resolved as shift
WARNING: shift/reduce conflict for GE in state 130 resolved as shift
WARNING: shift/reduce conflict for LE in state 130 resolved as shift
WARNING: shift/reduce conflict for EQ in state 130 resolved as shift
WARNING: shift/reduce conflict for NE in state 130 resolved as shift
WARNING: shift/reduce conflict for OR in state 130 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 131 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 131 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 131 resolved as shift
WARNING: shift/reduce conflict for DIV in state 131 resolved as shift
WARNING: shift/reduce conflict for MOD in state 131 resolved as shift
WARNING: shift/reduce conflict for AND in state 131 resolved as shift
WARNING: shift/reduce conflict for GT in state 131 resolved as shift
WARNING: shift/reduce conflict for LT in state 131 resolved as shift
WARNING: shift/reduce conflict for GE in state 131 resolved as shift
WARNING: shift/reduce conflict for LE in state 131 resolved as shift
WARNING: shift/reduce conflict for EQ in state 131 resolved as shift
WARNING: shift/reduce conflict for NE in state 131 resolved as shift
WARNING: shift/reduce conflict for OR in state 131 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 132 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 132 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 132 resolved as shift
WARNING: shift/reduce conflict for DIV in state 132 resolved as shift
WARNING: shift/reduce conflict for MOD in state 132 resolved as shift
WARNING: shift/reduce conflict for AND in state 132 resolved as shift
WARNING: shift/reduce conflict for GT in state 132 resolved as shift
WARNING: shift/reduce conflict for LT in state 132 resolved as shift
WARNING: shift/reduce conflict for GE in state 132 resolved as shift
WARNING: shift/reduce conflict for LE in state 132 resolved as shift
WARNING: shift/reduce conflict for EQ in state 132 resolved as shift
WARNING: shift/reduce conflict for NE in state 132 resolved as shift
WARNING: shift/reduce conflict for OR in state 132 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 133 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 133 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 133 resolved as shift
WARNING: shift/reduce conflict for DIV in state 133 resolved as shift
WARNING: shift/reduce conflict for MOD in state 133 resolved as shift
WARNING: shift/reduce conflict for AND in state 133 resolved as shift
WARNING: shift/reduce conflict for GT in state 133 resolved as shift
WARNING: shift/reduce conflict for LT in state 133 resolved as shift
WARNING: shift/reduce conflict for GE in state 133 resolved as shift
WARNING: shift/reduce conflict for LE in state 133 resolved as shift
WARNING: shift/reduce conflict for EQ in state 133 resolved as shift
WARNING: shift/reduce conflict for NE in state 133 resolved as shift
WARNING: shift/reduce conflict for OR in state 133 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 134 resolved as shift
WARNING: shift/reduce conflict for DIV in state 134 resolved as shift
WARNING: shift/reduce conflict for MOD in state 134 resolved as shift
WARNING: shift/reduce conflict for AND in state 134 resolved as shift
WARNING: shift/reduce conflict for GT in state 134 resolved as shift
WARNING: shift/reduce conflict for LT in state 134 resolved as shift
WARNING: shift/reduce conflict for GE in state 134 resolved as shift
WARNING: shift/reduce conflict for LE in state 134 resolved as shift
WARNING: shift/reduce conflict for EQ in state 134 resolved as shift
WARNING: shift/reduce conflict for NE in state 134 resolved as shift
WARNING: shift/reduce conflict for OR in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 135 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 135 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 135 resolved as shift
WARNING: shift/reduce conflict for DIV in state 135 resolved as shift
WARNING: shift/reduce conflict for MOD in state 135 resolved as shift
WARNING: shift/reduce conflict for AND in state 135 resolved as shift
WARNING: shift/reduce conflict for GT in state 135 resolved as shift
WARNING: shift/reduce conflict for LT in state 135 resolved as shift
WARNING: shift/reduce conflict for GE in state 135 resolved as shift
WARNING: shift/reduce conflict for LE in state 135 resolved as shift
WARNING: shift/reduce conflict for EQ in state 135 resolved as shift
WARNING: shift/reduce conflict for NE in state 135 resolved as shift
WARNING: shift/reduce conflict for OR in state 135 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 136 resolved as shift
WARNING: shift/reduce conflict for DIV in state 136 resolved as shift
WARNING: shift/reduce conflict for MOD in state 136 resolved as shift
WARNING: shift/reduce conflict for AND in state 136 resolved as shift
WARNING: shift/reduce conflict for GT in state 136 resolved as shift
WARNING: shift/reduce conflict for LT in state 136 resolved as shift
WARNING: shift/reduce conflict for GE in state 136 resolved as shift
WARNING: shift/reduce conflict for LE in state 136 resolved as shift
WARNING: shift/reduce conflict for EQ in state 136 resolved as shift
WARNING: shift/reduce conflict for NE in state 136 resolved as shift
WARNING: shift/reduce conflict for OR in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 137 resolved as shift
WARNING: shift/reduce conflict for DIV in state 137 resolved as shift
WARNING: shift/reduce conflict for MOD in state 137 resolved as shift
WARNING: shift/reduce conflict for AND in state 137 resolved as shift
WARNING: shift/reduce conflict for GT in state 137 resolved as shift
WARNING: shift/reduce conflict for LT in state 137 resolved as shift
WARNING: shift/reduce conflict for GE in state 137 resolved as shift
WARNING: shift/reduce conflict for LE in state 137 resolved as shift
WARNING: shift/reduce conflict for EQ in state 137 resolved as shift
WARNING: shift/reduce conflict for NE in state 137 resolved as shift
WARNING: shift/reduce conflict for OR in state 137 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 138 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 138 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 138 resolved as shift
WARNING: shift/reduce conflict for DIV in state 138 resolved as shift
WARNING: shift/reduce conflict for MOD in state 138 resolved as shift
WARNING: shift/reduce conflict for AND in state 138 resolved as shift
WARNING: shift/reduce conflict for GT in state 138 resolved as shift
WARNING: shift/reduce conflict for LT in state 138 resolved as shift
WARNING: shift/reduce conflict for GE in state 138 resolved as shift
WARNING: shift/reduce conflict for LE in state 138 resolved as shift
WARNING: shift/reduce conflict for EQ in state 138 resolved as shift
WARNING: shift/reduce conflict for NE in state 138 resolved as shift
WARNING: shift/reduce conflict for OR in state 138 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 139 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 139 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 139 resolved as shift
WARNING: shift/reduce conflict for DIV in state 139 resolved as shift
WARNING: shift/reduce conflict for MOD in state 139 resolved as shift
WARNING: shift/reduce conflict for AND in state 139 resolved as shift
WARNING: shift/reduce conflict for GT in state 139 resolved as shift
WARNING: shift/reduce conflict for LT in state 139 resolved as shift
WARNING: shift/reduce conflict for GE in state 139 resolved as shift
WARNING: shift/reduce conflict for LE in state 139 resolved as shift
WARNING: shift/reduce conflict for EQ in state 139 resolved as shift
WARNING: shift/reduce conflict for NE in state 139 resolved as shift
WARNING: shift/reduce conflict for OR in state 139 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 140 resolved as shift
WARNING: shift/reduce conflict for DIV in state 140 resolved as shift
WARNING: shift/reduce conflict for MOD in state 140 resolved as shift
WARNING: shift/reduce conflict for AND in state 140 resolved as shift
WARNING: shift/reduce conflict for GT in state 140 resolved as shift
WARNING: shift/reduce conflict for LT in state 140 resolved as shift
WARNING: shift/reduce conflict for GE in state 140 resolved as shift
WARNING: shift/reduce conflict for LE in state 140 resolved as shift
WARNING: shift/reduce conflict for EQ in state 140 resolved as shift
WARNING: shift/reduce conflict for NE in state 140 resolved as shift
WARNING: shift/reduce conflict for OR in state 140 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 141 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 141 resolved as shift
WARNING: shift/reduce conflict for DIV in state 141 resolved as shift
WARNING: shift/reduce conflict for MOD in state 141 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for GT in state 141 resolved as shift
WARNING: shift/reduce conflict for LT in state 141 resolved as shift
WARNING: shift/reduce conflict for GE in state 141 resolved as shift
WARNING: shift/reduce conflict for LE in state 141 resolved as shift
WARNING: shift/reduce conflict for EQ in state 141 resolved as shift
WARNING: shift/reduce conflict for NE in state 141 resolved as shift
WARNING: shift/reduce conflict for OR in state 141 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 142 resolved as shift
WARNING: shift/reduce conflict for DIV in state 142 resolved as shift
WARNING: shift/reduce conflict for MOD in state 142 resolved as shift
WARNING: shift/reduce conflict for AND in state 142 resolved as shift
WARNING: shift/reduce conflict for GT in state 142 resolved as shift
WARNING: shift/reduce conflict for LT in state 142 resolved as shift
WARNING: shift/reduce conflict for GE in state 142 resolved as shift
WARNING: shift/reduce conflict for LE in state 142 resolved as shift
WARNING: shift/reduce conflict for EQ in state 142 resolved as shift
WARNING: shift/reduce conflict for NE in state 142 resolved as shift
WARNING: shift/reduce conflict for OR in state 142 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 172 resolved as shift
